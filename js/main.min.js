webpackJsonp([9], {
    0: function(t, e, i) {
        "use strict";
        i(427), i(429), i(491), window.BateauxApp = i(492), jQuery(function() {
            return BateauxApp.init(), BateauxApp.main(), BateauxApp.startItems(), BateauxApp.afterItems()
        })
    },
    427: function(t, e, i) {
        t.exports = i.p + "images/bateaux-placeholder.png"
    },
    429: function(t, e, i) {
        t.exports = i.p + "images/bateaux-placeholder-square.png"
    },
    491: function(t, e) {},
    492: function(t, e, i) {
        "use strict";
        var n, s, o;
        o = i(493), i(494), i(495), i(496), i(497), i(498), i(499), i(500), i(501), i(502), i(503), i(504), i(505), i(506), i(507), i(508), i(509), i(510), i(511), i(512), i(513), i(514), i(515), i(516), i(517), i(518), i(519), i(520), i(521), i(522), i(523), i(524), i(525), i(526), i(527), i(528), i(529), i(530), i(531), i(532), i(533), i(534), i(535), n = jQuery, s = {}, s.init = function() {
            return this.ajaxUrl = BateauxOptions.ajax_url, this.smController = new o.Controller, this.body = n("body"), this.defaultScheme = this.body.data("scheme"), this.layout = this.body.data("layout"), "frame" !== this.layout ? this.frameWidth = 0 : this.frameWidth = this.body.data("frame_width"), this.pageLoad = n(".btx-page-load"), this.hasPageLoad = this.pageLoad.length, this.content = n(".btx-content"), this.isHorizontalScroll = this.content.hasClass("btx-scrollpage--full--horizontal"), this.isVerticalScroll = this.content.hasClass("btx-scrollpage--full--vertical"), this.isHalfPageScroll = this.content.hasClass("btx-scrollpage--half"), this.isResponsive = this.body.hasClass("btx-layout-responsive"), navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i) ? this.isMobileOrTablet = !0 : this.isMobileOrTablet = !1
        }, s.main = function() {
            return s.navbars(), s.hasPageLoad && (s.body.addClass("btx-unscrollable"), setTimeout(function() {
                if (!s.pageLoad.hasClass("loaded")) return s.pageLoad.addClass("loaded"), s.body.removeClass("btx-unscrollable")
            }, 1e4), s.pageLoad.hasClass("loaded") || n(window).load(function() {
                return setTimeout(function() {
                    return s.pageLoad.addClass("loaded"), s.body.removeClass("btx-unscrollable")
                }, 200)
            })), n("#wpadminbar").length && s.body.addClass("with-admin-toolbar"), s.body.btxAnimated({
                hasPageLoad: s.hasPageLoad,
                isHorizontalScroll: s.isHorizontalScroll,
                isVerticalScroll: s.isVerticalScroll,
                isHalfPageScroll: s.isHalfPageScroll,
                isResponsive: s.isResponsive,
                isMobileOrTablet: s.isMobileOrTablet
            }), n(".btx-wrapper--parallax-footer").btxFooterParallax({
                isResponsive: s.isResponsive
            }), s.content.btxContent({
                isHorizontalScroll: s.isHorizontalScroll,
                isVerticalScroll: s.isVerticalScroll,
                isHalfPageScroll: s.isHalfPageScroll,
                isResponsive: s.isResponsive,
                isMobileOrTablet: s.isMobileOrTablet,
                frameWidth: s.frameWidth
            }), n(".btx-audio").btxAudio(), n(".btx-page-hero--fit-height").btxSetSize({
                type: "header",
                addLineHeight: !1,
                isResponsive: s.isResponsive,
                isMobileOrTablet: s.isMobileOrTablet,
                frameWidth: s.frameWidth
            }), n(".btx-header-widgets").btxHeaderWidgets(), n(".js-menu-search").btxSearch(), n(".btx-product-gallery").btxProductGallery(), n(".js-share:not(.btx-social-email)").on("click", function(t) {
                return this.link = n(this).attr("href"), window.open(this.link, "window", "left=20, top=20, width=600, height=700, toolbar=0, resizable=1"), !1
            }), window.onYouTubeIframeAPIReady = function() {
                return n("iframe.btx-video-background-inner--youtube").each(function(t, e) {
                    var i;
                    return i = new YT.Player(e, {
                        events: {
                            onReady: function(t) {
                                return t.target.mute(), t.target.playVideo(), n(e).addClass("loaded")
                            }
                        }
                    })
                })
            }, n(".cart .quantity").btxQuantity(), n(".woocommerce-ordering").btxShopDropdown()
        }, s.navbars = function() {
            return n(".btx-navbar").btxNavbar({
                controller: s.smController,
                isHalfPageScroll: s.isHalfPageScroll,
                isHorizontalScroll: s.isHorizontalScroll,
                isVerticalScroll: s.isVerticalScroll,
                defaultScheme: s.defaultScheme,
                frameWidth: s.frameWidth,
                isResponsive: s.isResponsive
            }), n(".btx-side-navbar").btxSideNavbar({
                controller: s.smController,
                isHalfPageScroll: s.isHalfPageScroll,
                isHorizontalScroll: s.isHorizontalScroll,
                isVerticalScroll: s.isVerticalScroll,
                defaultScheme: s.defaultScheme
            }), n(".btx-navbar--mobile").btxNavbar({
                controller: s.smController,
                mobile: !0,
                defaultScheme: s.defaultScheme,
                frameWidth: s.frameWidth
            })
        }, s.fetchItems = function() {
            return n(".btx-item")
        }, s.startItems = function() {
            var t;
            return t = s.fetchItems(), t.each(function(t, e) {
                var i;
                if (i = e.className.match(/js-item-(\S+)/)) return e.btxItem = i[1], s.initItem(e)
            })
        }, s.initItem = function(t) {
            var e;
            if (t.btxItem) {
                switch (e = n(t), t.btxItem) {
                    case "accordion":
                        e.btxAccordion();
                        break;
                    case "archive":
                        e.btxArchive({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "bannertext":
                        e.btxBannerText();
                        break;
                    case "blog":
                        e.btxBlog({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "client":
                        e.btxClient({
                            isResponsive: s.isResponsive
                        });
                        break;
                    case "countdown":
                        e.btxCountdown();
                        break;
                    case "testimonial":
                        e.btxTestimonial({
                            isResponsive: s.isResponsive
                        });
                        break;
                    case "featuredpost":
                        e.btxFeaturedPost({
                            isResponsive: s.isResponsive
                        });
                        break;
                    case "gallery":
                        e.btxGallery({
                            isResponsive: s.isResponsive
                        });
                        break;
                    case "message":
                        e.btxMessage();
                        break;
                    case "milestone":
                        e.btxMilestone({
                            controller: s.smController,
                            hasPageLoad: s.hasPageLoad
                        });
                        break;
                    case "portfolio":
                        e.btxPortfolio({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "product":
                        e.btxProduct({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "productcat":
                        e.btxProduct({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "skill":
                        e.btxSkill({
                            controller: s.smController
                        });
                        break;
                    case "slider":
                        e.btxSlider({
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet,
                            frameWidth: s.frameWidth
                        });
                        break;
                    case "tab":
                        e.btxTab({
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "box":
                        e.btxBox({
                            controller: s.smController,
                            isResponsive: s.isResponsive,
                            isMobileOrTablet: s.isMobileOrTablet
                        });
                        break;
                    case "video":
                        e.btxVideo()
                }
                return e.on("hiddenOpen.btx", function() {
                    var t;
                    return e.hasClass("btx-video") && (e.find(".mejs-video").resize(), t = e.find("video"), t.length && e.data("autoplay") && t[0].play()), e.find(".slick-slider").slick("setPosition", 0)
                }), e.on("resetScrollPage.btx", function() {
                    return e.find(".slick-slider").slick("reinit")
                })
            }
        }, s.afterItems = function() {
            return n(".btx-row--main").btxRow({
                isResponsive: s.isResponsive,
                isMobileOrTablet: s.isMobileOrTablet
            }), n(".btx-background").btxBackground({
                controller: s.smController,
                hasPageLoad: s.hasPageLoad,
                isMobileOrTablet: s.isMobileOrTablet
            }), n(window).load(function() {
                return setTimeout(function() {
                    return n(".btx-sidebar-background").addClass("btx-sidebar-background-container")
                }, 500)
            }), n("a").each(function(t, e) {
                var i, o, a, r;
                if (e = n(e), r = e.attr("href"), r && (r.match(/^#modal-(\S+)/) ? e.btxModalTrigger() : r.match(/^#(\S+)/) && e.btxScrollTo({
                        controller: s.smController
                    }), o = e.closest(".btx-item"), a = e.closest(".btx-content-header"), (o.length > 0 || a.length > 0) && (i = o.length > 0 ? o : a, i.hasClass("modal-embed") && (r.indexOf("youtube.com") >= 0 || r.indexOf("vimeo.com") >= 0 || r.indexOf("maps.google") >= 0 || r.indexOf("google.com/maps") >= 0 || r.indexOf("w.soundcloud.com") >= 0 || r.indexOf("mixcloud.com/widget/") >= 0) && e.magnificPopup({
                        type: "iframe",
                        disableOn: 700,
                        mainClass: "mfp-fade",
                        removalDelay: 160,
                        closeBtnInside: !1,
                        preloader: !1,
                        fixedContentPos: !1
                    }), i.hasClass("modal-image") && (r.indexOf(".png") >= 0 || r.indexOf(".jpg") >= 0 || r.indexOf(".gif") >= 0 || r.indexOf(".tif") >= 0)))) return e.magnificPopup({
                    type: "image",
                    closeOnContentClick: !0,
                    mainClass: "mfp-fade",
                    image: {
                        verticalFit: !0,
                        tError: "The image could not be loaded."
                    }
                })
            })
        }, s.addMediaPlayerScript = function(t) {
            if ("youtube" === t && !s.youtubeAdded) return n("body").append('<script type="text/javascript" src="https://www.youtube.com/iframe_api"></script>'), s.youtubeAdded = !0
        }, t.exports = s
    },
    494: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.accordion", {
                options: {
                    multiple: !1
                },
                _create: function() {
                    return this.element.find(".active .btx-accordion-body").show(), this._on(this.element, {
                        "click .btx-accordion-heading": t.proxy(this._panelClicked, this)
                    })
                },
                _panelClicked: function(e) {
                    var i, n, s, o;
                    return e.preventDefault(), n = t(e.currentTarget), o = n.parent(), i = n.next(), s = this.element.data("multiple") || this.options.multiple, o.hasClass("active") ? s ? i.stop(!0, !0).slideToggle(300).parent().toggleClass("active") : void 0 : (s ? (i.stop(!0, !0).slideToggle(300), o.toggleClass("active")) : (o.siblings().find(".btx-accordion-body").stop(!0, !0).slideUp(300), o.siblings().removeClass("active"), i.stop(!0, !0).slideDown(300), o.addClass("active")), i.find(".btx-item").trigger("hiddenOpen.btx"))
                }
            }), t.widget.bridge("btxAccordion", t.bateaux.accordion)
        }).call(e, i(1))
    },
    495: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.quantity", {
                _create: function() {
                    var t, e, i;
                    return t = this.element, i = this.element.find("input.qty").val(), e = '<div class="btx-quantity">\n  <a href="#" class="fa fa-minus-circle btx-quantity-minus"></a>\n  <input type="number" class="btx-quantity-text" min="1" max="99" value="' + i + '">\n  <a href="#" class="fa fa-plus-circle btx-quantity-plus""></a>\n</div>', t.prepend(e), this._on(this.element, {
                        "click .btx-quantity-minus": "_minusClicked",
                        "click .btx-quantity-plus": "_plusClicked",
                        "change .btx-quantity-text": "_quantityChanged",
                        "keyup .btx-quantity-text": "_quantityChanged",
                        "keypress .btx-quantity-text": "_keyPressed"
                    })
                },
                _minusClicked: function(e) {
                    var i, n;
                    if (e.preventDefault(), i = t(e.currentTarget), n = parseInt(i.siblings("input").val()), 1 !== n) return this.element.find("input").val(n - 1)
                },
                _plusClicked: function(e) {
                    var i, n;
                    return e.preventDefault(), i = t(e.currentTarget), n = parseInt(i.siblings("input").val()), this.element.find("input").val(n + 1)
                },
                _quantityChanged: function(e) {
                    var i, n;
                    return i = t(e.currentTarget), n = parseInt(i.val()), this.element.find("input").val(n)
                },
                _keyPressed: function(t) {
                    if (13 === t.keyCode) return t.preventDefault()
                }
            }), t.widget.bridge("btxQuantity", t.bateaux.quantity)
        }).call(e, i(1))
    },
    496: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.animated", {
                options: {
                    item: ".anmt-item",
                    offset: .95,
                    duration: 800,
                    interval: 200,
                    hasPageLoad: !1,
                    isHorizontalScroll: !1,
                    isVerticalScroll: !1,
                    isHalfPageScroll: !1,
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    tabletScreen: 960
                },
                _create: function() {
                    var e, i, n, s, o;
                    return e = this.element, o = this, n = this.options.isHorizontalScroll, s = this.options.isVerticalScroll, i = this.options.isHalfPageScroll, this.options.hasPageLoad ? t(window).load(function() {
                        return setTimeout(function() {
                            return n || s || i ? o.initializeSlidePageAnimation(e) : o.initializeAnimation(e), e.addClass("container-animated")
                        }, 200)
                    }) : (n || s || i ? this.initializeSlidePageAnimation(e) : setTimeout(function() {
                        return o.initializeAnimation(e)
                    }, 200), e.addClass("container-animated"))
                },
                initializeSlidePageAnimation: function(e) {
                    var i, n, s, o, a, r, l;
                    return l = this, i = "", o = "", this.options.isMobileOrTablet && this.options.isResponsive ? this.initializeAnimation(e) : (this.windowWidth = t(window).width(), this.windowWidth <= this.options.tabletScreen && this.initializeAnimation(e), this.options.isHorizontalScroll || this.options.isVerticalScroll ? (s = e.find(".btx-section[data-index=0]").find(this.options.item), this.setfullSlideAnimation(s), t(".btx-main-wrapper").on("beforeChange", function(e, i, n, s) {
                        var o, a;
                        return a = t(i.$slides.get(s)).find(l.options.item), o = t(i.$slides.get(n)).find(l.options.item), l.onSlideChange(o, a)
                    })) : (r = e.find(".btx-content .btx-row").first().children(), i = r.first(), o = r.last(), n = i.find(".btx-box.slick-current").find(this.options.item), a = o.find(".btx-box.slick-current").find(this.options.item), this.setfullSlideAnimation(n), this.setfullSlideAnimation(a), i.on("beforeChange", function(e, i, n, s) {
                        var o, a;
                        return a = t(i.$slides.get(s)).find(l.options.item), o = t(i.$slides.get(n)).find(l.options.item), l.onSlideChange(o, a)
                    }), o.on("beforeChange", function(e, i, n, s) {
                        var o, a;
                        return a = t(i.$slides.get(s)).find(l.options.item), o = t(i.$slides.get(n)).find(l.options.item), l.onSlideChange(o, a)
                    })), t(window).on("resize", function() {
                        return l._windowResize()
                    }))
                },
                _windowResize: function() {
                    var e;
                    return e = t(window).width(), e <= this.options.tabletScreen && this.windowWidth > this.options.tabletScreen && this.unsetfullSlideAnimation(), this.windowWidth = e
                },
                setfullSlideAnimation: function(e) {
                    var i, n, s, o, a;
                    return s = this, a = 0, n = [], o = this.options.interval, e.each(function(e, i) {
                        var o;
                        return o = t(i), o.hasClass("stagger") ? (a++, n.push(o)) : (s._doAnimate(o), s._removeAnimate(o))
                    }), i = setInterval(function() {
                        var t;
                        if (n.length > 0 && (t = n.shift(), s._doAnimate(t), a--, s._removeAnimate(t)), a <= 0) return clearInterval(i)
                    }, o)
                },
                onSlideChange: function(e, i) {
                    var n, s, o, a, r;
                    return o = this, r = 0, s = [], a = this.options.interval, i.each(function(e, i) {
                        var n;
                        return n = t(i), n.hasClass("stagger") ? (r++, s.push(n)) : (o._doAnimate(n), o._removeAnimate(n))
                    }), setTimeout(function() {
                        return e.removeClass("animated btx-opacity1")
                    }, 300), n = setInterval(function() {
                        var t;
                        if (s.length > 0 && (t = s.shift(), o._doAnimate(t), r--, o._removeAnimate(t)), r <= 0) return clearInterval(n)
                    }, a)
                },
                unsetfullSlideAnimation: function() {
                    var e, i;
                    return i = this, e = this.element.find(this.options.item), e.each(function(e, n) {
                        var s;
                        if (s = t(n), !s.hasClass("animated")) return i._doAnimate(s)
                    })
                },
                initializeAnimation: function(e) {
                    var i, n, s, o, a, r, l;
                    return a = this, l = 0, s = [], o = e.find(this.options.item), n = this.options.offset, r = this.options.interval, o.each(function(e, i) {
                        var o, r, d, h, u;
                        if (o = t(i), !o.hasClass("animated")) return r = o.hasClass("stagger"), d = o.outerHeight(), h = o.offset().top, u = t(window).scrollTop(), r && h + d > u && l++, t(this).attr("data-animation-offset") && (n = parseFloat(t(this).attr("data-animation-offset"))), u + t(window).height() * n > h ? r && h + d > u ? s.push(o) : (a._doAnimate(o), a._removeAnimate(o)) : t(window).scroll(function(e) {
                            if (d = o.outerHeight(), h = o.offset().top, u = t(window).scrollTop(), u + t(window).height() * n > h) return r && h + d > u ? s.push(o) : (a._doAnimate(o), a._removeAnimate(o)), t(window).unbind("scroll", e.handleObj.handler, e)
                        })
                    }), i = setInterval(function() {
                        var t;
                        if (s.length > 0 && (t = s.shift(), a._doAnimate(t), l--, a._removeAnimate(t)), l <= 0) return clearInterval(i)
                    }, r)
                },
                _doAnimate: function(t) {
                    var e;
                    return e = this.options.duration, t.attr("data-animation-duration") && (e = t.attr("data-animation-duration"), t.css({
                        "animation-duration": e,
                        "-webkit-animation-duration": e
                    })), t.addClass("animated btx-opacity1"), t.trigger("btx.itemAnimated")
                },
                _removeAnimate: function(t) {
                    var e;
                    return e = this.options.duration, t.attr("data-animation-duration") && (e = t.attr("data-animation-duration")), setTimeout(function() {
                        return t.css({
                            "animation-duration": "",
                            "-webkit-animation-duration": ""
                        })
                    }, parseInt(e))
                }
            }), t.widget.bridge("btxAnimated", t.bateaux.animated)
        }).call(e, i(1))
    },
    497: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.archive", {
                filter: null,
                controller: null,
                isResponsive: !0,
                isMobileOrTablet: !1,
                options: {
                    isotopeContainer: ".btx-archive-content",
                    masonryOptions: {
                        itemSelector: ".btx-entry",
                        columnWidth: ".btx-entry"
                    }
                },
                _create: function() {
                    var t, e;
                    if (e = this, t = this.element.attr("class").match(/btx-archive--(\S+)/), this.style = t ? t[1] : "default", this.filterBar = this.element.find(".btx-filter-bar"), this.initial_entry = this.element.find(".btx-entry"), this.isAnimatedItem = this.element.find(".btx-entry-inner").hasClass("anmt-item"), this.isotope = this.element.find(this.options.isotopeContainer), "list" !== this.style) return this.isotope.imagesLoaded(function(t) {
                        return function() {
                            return e._runIsotope()
                        }
                    }(this)), this.element.on("hiddenOpen.btx", function() {
                        return e.isotope.imagesLoaded(function(t) {
                            return function() {
                                return e._runIsotope()
                            }
                        }(this))
                    })
                },
                _runIsotope: function() {
                    var e, i;
                    return i = this, e = {
                        filter: t.proxy(this._isotopeFilter, this)
                    }, "masonry" === this.style ? e.masonry = this.options.masonryOptions : "grid" === this.style && (e.layoutMode = "fitRows", e.itemSelector = ".btx-entry"), this.isotope.isotope(e)
                }
            }), t.widget.bridge("btxArchive", t.bateaux.archive)
        }).call(e, i(1))
    },
    498: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.audio", {
                options: {
                    duration: !1
                },
                _create: function() {
                    if (this.element.find(".btx-audio-player").length) return this.audio = this.element.find("audio"), this.audioPlayer = this.element.children(".btx-audio-player"), this.audioButton = this.element.find(".btx-audio-button"), this._on(this.element, {
                        "click .btx-audio-player": "_playerClicked"
                    }), this._on(this.audio, {
                        ended: "_audioEnded",
                        play: "_audioPlayed",
                        pause: "_audioPaused"
                    })
                },
                _playerClicked: function(t) {
                    return this.audioPlayer.hasClass("pause") ? this._audioPlayed() : this.audioPlayer.hasClass("play") ? this._audioPaused() : void 0
                },
                _audioPlayed: function() {
                    return this.audioPlayer.removeClass("pause").addClass("play"), this.audioButton.removeClass("fa-play").addClass("fa-pause"), this.audio[0].play()
                },
                _audioPaused: function() {
                    return this.audioPlayer.removeClass("play").addClass("pause"), this.audioButton.removeClass("fa-pause").addClass("fa-play"), this.audio[0].pause()
                },
                _audioEnded: function() {
                    return this.audioPlayer.removeClass("play").addClass("pause"), this.audioButton.removeClass("fa-pause").addClass("fa-play")
                }
            }), t.widget.bridge("btxAudio", t.bateaux.audio)
        }).call(e, i(1))
    },
    499: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.background", {
                options: {
                    isMobileOrTablet: !1,
                    enableMobileParallax: !1,
                    contentfade: !1,
                    speed: 0,
                    type: "image",
                    ratio: 16 / 9,
                    offset: 10,
                    hasPageLoad: !1,
                    delayTime: 200
                },
                _create: function() {
                    var e, i, n, s, o, a;
                    if (s = this, e = this.options.delayTime, i = this.element.data("mobileparallax") / 10 || this.options.enableMobileParallax, (this.element.hasClass("btx-background--zoom-in") || this.element.hasClass("btx-background--zoom-out")) && (this.options.hasPageLoad ? t(window).load(function() {
                            return s._animatedBackground()
                        }) : this._animatedBackground()), this.options.isMobileOrTablet) {
                        if (this.element.find(".btx-video-background-inner").remove(), i && (this.fadeItem = this.element.data("contentfade") || this.options.contentfade, this.parallaxSpeed = this.element.data("parallaxspeed") / 10 || this.options.speed, 0 !== this.parallaxSpeed)) return this.wrapper = this.element.find(".btx-background-wrapper"), t(window).load(function() {
                            return s._setWrapperSize(), s._doParallax()
                        }), t(window).on("resize", function() {
                            return clearTimeout(s.resizeTimer), s.resizeTimer = setTimeout(function() {
                                return s._setWrapperSize(), s._doParallax()
                            }, e)
                        }), this._on(t(window), {
                            scroll: t.proxy(this._doParallax, this)
                        })
                    } else if (this.fadeItem = this.element.data("contentfade") || this.options.contentfade, this.parallaxSpeed = this.element.data("parallaxspeed") / 10 || this.options.speed, this.type = this.element.data("type") || this.options.type, this.wrapper = this.element.find(".btx-background-wrapper"), "video" === this.type) {
                        if (o = this.element.find(".btx-video-background-inner"), this.selfHostedVideo = this.element.find("video"), this._isVimeo = o.hasClass("btx-video-background-inner--vimeo"), this._isYoutube = o.hasClass("btx-video-background-inner--youtube"), this._isYoutube && BateauxApp.addMediaPlayerScript("youtube"), 0 === this.parallaxSpeed ? (t(window).load(function() {
                                return s._setVideoBackgroundSize(o, !0)
                            }), t(window).on("resize", function() {
                                return clearTimeout(s.resizeTimer), s.resizeTimer = setTimeout(function() {
                                    return s._setVideoBackgroundSize(o)
                                }, e)
                            })) : (this.parent = this.element.parent(), this.fadeItem && this.parent.addClass("btx-fade-content"), t(window).load(function() {
                                return s._setWrapperSize(), s._doParallax(), s._setVideoBackgroundSize(o, !0)
                            }), t(window).on("resize", function() {
                                return clearTimeout(s.resizeTimer), s.resizeTimer = setTimeout(function() {
                                    return s._setWrapperSize(), s._setVideoBackgroundSize(o), s._doParallax()
                                }, e)
                            }), this._on(t(window), {
                                scroll: t.proxy(this._doParallax, this)
                            })), this._isVimeo) return a = o[0], n = $f(a), n.addEvent("ready", function() {
                            return n.api("setVolume", 0)
                        })
                    } else if (0 !== this.parallaxSpeed) return this.parent = this.element.parent(), this.fadeItem && this.parent.addClass("btx-fade-content"), t(window).load(function() {
                        return s._setWrapperSize(), s._doParallax()
                    }), t(window).on("resize", function() {
                        return clearTimeout(s.resizeTimer), s.resizeTimer = setTimeout(function() {
                            return s._setWrapperSize(), s._doParallax()
                        }, e)
                    }), this._on(t(window), {
                        scroll: t.proxy(this._doParallax, this)
                    })
                },
                _animatedBackground: function() {
                    var t, e, n, s;
                    return t = i(493), e = this.element, n = e.closest(".btx-item"), n.hasClass("anmt-item") ? n.on("btx.itemAnimated", function() {
                        return e.addClass("animated"), n.off("btx.itemAnimated")
                    }) : (s = new t.Scene({
                        triggerElement: e[0],
                        triggerHook: "onEnter"
                    }), s.addTo(this.options.controller), s.on("enter", function() {
                        return e.addClass("animated"), s.destroy()
                    }))
                },
                _setWrapperSize: function() {
                    var e;
                    return e = this.element.outerHeight(), this.parallaxSpeed > 0 ? e += (t(window).height() - e) * this.parallaxSpeed : this.parallaxSpeed < 0 && (e += (t(window).height() + e) * Math.abs(this.parallaxSpeed)), this.wrapper.css("height", e + "px")
                },
                _setVideoBackgroundSize: function(t, e) {
                    var i, n, s, o, a, r, l;
                    return l = this.wrapper.width(), r = this.wrapper.height(), e && t.addClass("loaded"), o = this.options.ratio, l / r > o ? (a = l, i = l / o, n = 0, s = (r - l / o) / 2) : (a = r * o, i = r, n = (l - r * o) / 2, s = 0), t.css("width", a + "px"), t.css("height", i + this.options.offset + "px"), t.css("margin-top", s - this.options.offset / 2 + "px"), t.css("margin-left", n + "px")
                },
                _doParallax: function() {
                    var e, i, n, s, o;
                    if (o = t(window).height(), s = t(window).scrollTop(), e = this.element.outerHeight(), i = this.element.offset().top, !(s + o <= i || s >= i + e) && (this.parallaxSpeed > 0 ? n = (s - i) * this.parallaxSpeed : this.parallaxSpeed < 0 && (n = (s + o - i) * this.parallaxSpeed), this.wrapper.css({
                            transform: "translateY(" + n + "px)",
                            "-webkit-transform": "translateY(" + n + "px)",
                            "-moz-transform": "translateY(" + n + "px)",
                            "-ms-transform": "translateY(" + n + "px)",
                            "-o-transform": "translateY(" + n + "px)"
                        }), this.fadeItem)) {
                        if (!(i + e - s < 2 * e / 3)) return this.parent.removeClass("faded");
                        if (!this.parent.hasClass("faded")) return this.parent.addClass("faded")
                    }
                }
            }), t.widget.bridge("btxBackground", t.bateaux.background)
        }).call(e, i(1))
    },
    500: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.bannerText", {
                options: {
                    loop: !1,
                    duration: 3e3,
                    cursor: "|",
                    words: ["Text 1", "Text 2", "Text 3", "Text 4"]
                },
                _create: function() {
                    var t, e, i, n, s;
                    return i = this.element.attr("class").match(/btx-bannertext--(\S+)/), n = i ? i[1] : "flip", e = this.element.find(".btx-bannertext-dynamic-inner"), s = this.element.data("words").split(","), this.duration = this.element.data("duration"), this.element.data("loop") ? this.loop = !0 : this.loop = !1, "flip" === n ? this._flipAnimate(e, s) : (t = this.element.data("cursor"), e.typed({
                        strings: s,
                        typeSpeed: 40,
                        backSpeed: 0,
                        startDelay: 200,
                        backDelay: this.duration,
                        loop: this.loop,
                        loopCount: !1,
                        showCursor: !0,
                        cursorChar: t,
                        attr: null
                    }))
                },
                _flipAnimate: function(t, e) {
                    var i, n, s, o, a, r;
                    if (o = e.length, r = this.loop, t.append('<span class="btx-bannertext-item">' + e[0] + "</span>"), o > 1) return t.append('<span class="btx-bannertext-item">' + e[1] + "</span>"), a = this, n = t.find(".btx-bannertext-item:first-child"), i = t.find(".btx-bannertext-item:last-child"), s = 0, setInterval(function() {
                        if (r !== !1 || s !== o - 1) return t.toggleClass("flip"), o > 2 ? setTimeout(function() {
                            var r;
                            return r = a._wordIndexCalculate(s, o), t.hasClass("flip") ? n.text(e[r]) : i.text(e[r]), s++
                        }, 500) : s++
                    }, this.duration)
                },
                _wordIndexCalculate: function(t, e) {
                    var i, n;
                    return i = t % e + 2, n = i < e ? i : i - e
                }
            }), t.widget.bridge("btxBannerText", t.bateaux.bannerText)
        }).call(e, i(1))
    },
    501: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.blog", {
                filter: null,
                controller: null,
                isResponsive: !0,
                isMobileOrTablet: !1,
                options: {
                    isotopeContainer: ".btx-blog-content",
                    masonryOptions: {
                        itemSelector: ".btx-entry",
                        columnWidth: ".btx-entry"
                    }
                },
                _create: function() {
                    var e, i;
                    if (i = this, e = this.element.attr("class").match(/btx-blog--(\S+)/), this.style = e ? e[1] : "default", this.filterBar = this.element.find(".btx-filter-bar"), this.initial_entry = this.element.find(".btx-entry"), this.isAnimatedItem = this.element.find(".btx-entry-inner").hasClass("anmt-item"), this.isotope = this.element.find(this.options.isotopeContainer), "timeline" !== this.style && (this.isotope.imagesLoaded(function(t) {
                            return function() {
                                return i._runIsotope()
                            }
                        }(this)), this.element.on("hiddenOpen.btx", function() {
                            return i.isotope.imagesLoaded(function(t) {
                                return function() {
                                    return i._runIsotope()
                                }
                            }(this))
                        })), this.pagination = this.element.find(".js-load-more"), this.paginationInput = this.pagination.find("input[type=hidden]"), this.loadedPosts = this.paginationInput.data("loaded"), this.pagination.length) return this.pagination.btxPaginate({
                        controller: this.options.controller,
                        action: "bateaux_blog_entries"
                    }), this.filterBar.length && (this.currentCat = [], this.filterBar.find(".js-blog-filter").each(function(e, n) {
                        return i.currentCat.push(t(this).data("filter"))
                    })), this.initial_entry.addClass("loaded"), this.pagination.on("load.btxpagination", t.proxy(this._paginationLoaded, this))
                },
                _paginationLoaded: function(e, i) {
                    var n, s, o, a, r, l, d, h, u;
                    return i.result ? (h = this, a = this.isotope, r = t(i.result.content), n = [], l = [], s = [], r.each(function(e, i) {
                        if (1 === i.nodeType && (n.push(i), h.filterBar.length)) return l.push(t(this).data("filter"))
                    }), this.filterBar.length && t.each(l, function(t, e) {
                        var i;
                        if (e) return i = e.indexOf(",") > -1 ? e.split(", ") : [e], s = s.concat(i)
                    }), "timeline" !== this.style ? a.isotope("insert", n) : a.append(n), d = this.element.find(".btx-entry:not(.loaded)"), d.addClass("loaded"), o = d.find(".btx-gallery"), o.length && o.btxGallery(), u = d.find("video, audio"), u.length && (u.mediaelementplayer(), d.find(".btx-audio").btxAudio()), "timeline" !== this.style ? (a.imagesLoaded(function(t) {
                        return function() {
                            return a.isotope("layout"), setTimeout(function() {
                                return h._animateItems()
                            }, 200)
                        }
                    }(this)), this.filterBar.length && this._addMoreFilters(t.unique(s))) : this._animateItems(), this.paginationInput.attr("data-loaded") ? this._addDataLoaded(d) : void 0) : (this.pagination.find(".btnx-text").text("error"), this.pagination.addClass("error"))
                },
                _animateItems: function() {
                    if (this.isAnimatedItem) return this.element.hasClass("container-animated") ? this.element.btxAnimated("initializeAnimation", this.element) : this.element.btxAnimated({
                        offset: .9,
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet
                    })
                },
                _addDataLoaded: function(e) {
                    var i;
                    return i = [], e.each(function(e, n) {
                        var s, o;
                        return s = t(this).attr("class").match(/post-(\S+)/), o = s ? s[1] : null, i.push(o)
                    }), this.loadedPosts = t.merge(i, this.loadedPosts), this.paginationInput.data("loaded", this.loadedPosts)
                },
                _addMoreFilters: function(e) {
                    var i, n;
                    return n = this, i = t(e).not(this.currentCat).get(), t.each(i, function(t, e) {
                        if ("" !== e) return n.filterBar.append('<li><a href="#" class="js-blog-filter btx-p-text-color" data-filter="' + e + '">' + e + "</a></li>")
                    }), this.currentCat = this.currentCat.concat(i)
                },
                _runIsotope: function() {
                    var e;
                    return e = {
                        filter: t.proxy(this._isotopeFilter, this)
                    }, "masonry" === this.style ? e.masonry = this.options.masonryOptions : "grid" === this.style ? (e.layoutMode = "fitRows", e.itemSelector = ".btx-entry") : "list" === this.style && (e.itemSelector = ".btx-entry"), this.isotope.isotope(e), this._on(this.element, {
                        "click .js-blog-filter": "_blogFilterClicked"
                    })
                },
                _blogFilterClicked: function(e) {
                    var i;
                    return e.preventDefault(), i = t(e.currentTarget).attr("data-filter"), this.filter = "all" !== i && i, this.isotope.isotope()
                },
                _isotopeFilter: function(e, i) {
                    var n;
                    return !this.filter || (n = t(i).attr("data-filter"), n.indexOf(this.filter) > -1)
                },
                _destroy: function() {
                    if (this.pagination.length) return this.pagination.off("load.btxpagination")
                }
            }), t.widget.bridge("btxBlog", t.bateaux.blog)
        }).call(e, i(1))
    },
    502: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.box", {
                options: {
                    controller: null,
                    isResponsive: !0,
                    isMobileOrTablet: !1
                },
                _create: function() {
                    var t, e, i, n;
                    if (e = this.element, e.hasClass("btx-box--pinned")) return t = this.options.controller, n = this.options.isResponsive, i = this.options.isMobileOrTablet, e.btxPinned({
                        controller: t,
                        isResponsive: n,
                        isMobileOrTablet: i
                    })
                }
            }), t.widget.bridge("btxBox", t.bateaux.box)
        }).call(e, i(1))
    },
    503: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.client", {
                options: {
                    isResponsive: !0
                },
                _create: function() {
                    if (this.element.hasClass("btx-client--carousel")) return this._initializeCarousel()
                },
                _initializeCarousel: function() {
                    return this.element.find(".btx-client-content").btxCarousel({
                        isResponsive: this.options.isResponsive
                    })
                }
            }), t.widget.bridge("btxClient", t.bateaux.client)
        }).call(e, i(1))
    },
    504: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.carousel", {
                options: {
                    isResponsive: !0,
                    sliderOptions: {
                        dots: !1,
                        fade: !1,
                        infinite: !0,
                        arrows: !0,
                        prevArrow: '<span class="slick-prev"> <i class="fa fa-ln-arrow-left"></i> </span>',
                        nextArrow: '<span class="slick-next"> <i class="fa fa-ln-arrow-right"></i> </span>',
                        slidesToScroll: 1,
                        slidesToShow: 1,
                        autoplay: !1,
                        autoplaySpeed: 5e3,
                        vertical: !1,
                        responsive: []
                    }
                },
                _create: function() {
                    var e, i, n, s, o, a, r, l;
                    return a = this.options.sliderOptions, a.responsive = [], this.element.attr("data-display") && (a.slidesToShow = this.element.data("display")), this.element.attr("data-scroll") ? a.slidesToScroll = this.element.data("scroll") : a.slidesToScroll = a.slidesToShow, this.options.isResponsive && (a.slidesToShow > 4 && (l = a.slidesToScroll <= 4 ? a.slidesToScroll : 4, a.responsive.push({
                        breakpoint: 960,
                        settings: {
                            slidesToShow: 4,
                            slidesToScroll: l
                        }
                    })), a.slidesToShow >= 4 && (s = a.slidesToScroll <= 2 ? a.slidesToScroll : 2, a.responsive.push({
                        breakpoint: 768,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: s
                        }
                    })), a.slidesToShow > 1 && a.responsive.push({
                        breakpoint: 480,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1
                        }
                    })), this.element.attr("data-arrows") && (a.arrows = this.element.data("arrows")), this.element.attr("data-indicator") && (a.dots = this.element.data("indicator")), this.element.attr("data-loop") && (a.infinite = this.element.data("loop")), this.element.attr("data-fade") && (a.slidesToScroll = 1) && (a.fade = !0, a.cssEase = "linear"), this.element.attr("data-duration") && (r = this.element.data("duration"), t.isNumeric(r) && (a.autoplay = !0, a.autoplaySpeed = r)), this.options.vertical === !0 && (a.prevArrow = '<span class="slick-prev slick-prev--vertical"> <i class="fa fa-ln-arrow-up"></i> </span>', a.nextArrow = '<span class="slick-next slick-next--vertical"> <i class="fa fa-ln-arrow-down"></i> </span>'), this.element.slick(a).addClass("slider-ready"), o = this, i = this.element, n = !!this.element.find(".btx-video-background-inner").length, n && (e = this.element.find(".slick-current video.btx-video-background-inner"), this._playVideo(e)), this.element.on("beforeChange", function(t, e, s, a) {
                        var r, l, d, h, u;
                        if (l = i.find(".slick-slide[data-slick-index='" + a + "']"), h = i.find(".slick-slide[data-slick-index='" + s + "']"), r = l.find(".btx-background.animated"), r && (r.removeClass("animated"), setTimeout(function() {
                                return r.addClass("animated")
                            }, 50)), n) return d = l.find("video.btx-video-background-inner"), u = h.find("video.btx-video-background-inner"), o._playVideo(d), o._pauseVideo(u)
                    })
                },
                _playVideo: function(t) {
                    if (t.length) return t[0].play()
                },
                _pauseVideo: function(t) {
                    if (t.length) return t[0].pause()
                }
            }), t.widget.bridge("btxCarousel", t.bateaux.carousel)
        }).call(e, i(1))
    },
    505: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.collapsedMenu", {
                options: {
                    sidenavWidth: 280,
                    collapsedDelayTime: 0,
                    transitionDelayTime: 40,
                    transitionDuration: 800,
                    transitionEasing: [20, 10],
                    isParallaxFooter: !1,
                    isBoxedLayout: !1,
                    mobile: !1
                },
                _create: function() {
                    var e, i, n;
                    if (this.button = this.element.find(".btx-collapsed-button"), this.button.length) return n = this.button.data("target"), this.collapsedMenu = this.element.find(n), this.isFullMenu = this.collapsedMenu.hasClass("btx-collapsed-menu--full"), this.isFixed = this.element.data("fixed"), this.collapsedMenu.hasClass("btx-collapsed-menu--right") && (e = this.collapsedMenu, e.addClass("hide"), i = 5 * e.find(".btx-menu > li").length, setTimeout(function() {
                        return e.removeClass("hide")
                    }, i)), this.isFixed && this.isFullMenu && (this.options.collapsedDelayTime = 200), this.isMinimalSidenav = this.element.hasClass("btx-side-navbar--minimal"), this.isMinimalSidenav && (this.nav = this.element.find(".btx-side-navbar-nav"), this.topbar = t(".btx-topbar"), this.content = t(".btx-content"), this.footer = t(".btx-footer"), t(".btx-wrapper").hasClass("btx-wrapper--parallax-footer") && (this.options.isParallaxFooter = !0), t(".btx-layout").hasClass("btx-layout--boxed") && (this.options.isBoxedLayout = !0)), this._on(this.button, {
                        click: "_collapsedButtonClicked"
                    })
                },
                _collapsedButtonClicked: function(e) {
                    var i, n;
                    if (e.preventDefault(), i = t(e.currentTarget), this.element.css("transform", "none"), n = this, i.hasClass("btx-closed") ? this._closeCollapsedMenu() : setTimeout(function() {
                            return n._openCollapsedMenu()
                        }, this.options.collapsedDelayTime), i.toggleClass("btx-closed"), this.isFullMenu && (t("body").toggleClass("btx-unscrollable"), this.options.mobile)) return t("html").toggleClass("btx-unscrollable");
                },
                _openCollapsedMenu: function() {
                    if (this.collapsedMenu.addClass("active"), this.isMinimalSidenav) return this.element.removeClass("closed"), this.element.addClass("opened"), this.options.isParallaxFooter && this.options.isBoxedLayout && this.footer.css("position", "absolute"), this.element.hasClass("btx-side-navbar--right") ? (this._contentPushed(this.topbar, -this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.content, -this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.footer, -this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.nav, -this.options.sidenavWidth, 0), this.element.velocity({
                        right: 0
                    }, {
                        duration: this.options.transitionDuration,
                        easing: this.options.transitionEasing
                    })) : (this._contentPushed(this.topbar, this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.content, this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.footer, this.options.sidenavWidth, this.options.transitionDelayTime), this._contentPushed(this.nav, this.options.sidenavWidth, 0), this.element.velocity({
                        left: 0
                    }, {
                        duration: this.options.transitionDuration,
                        easing: this.options.transitionEasing
                    }))
                },
                _closeCollapsedMenu: function() {
                    var t;
                    if (t = this.footer, this.collapsedMenu.removeClass("active"), this.isMinimalSidenav) return this.element.removeClass("opened"), this.element.addClass("closed"), this.options.isParallaxFooter && this.options.isBoxedLayout && setTimeout(function() {
                        return t.css("position", "fixed")
                    }, 400), this._contentPushed(this.topbar, 0, 0), this._contentPushed(this.content, 0, 0), this._contentPushed(this.footer, 0, 0), this._contentPushed(this.nav, 0, this.options.transitionDelayTime), this.element.hasClass("btx-side-navbar--right") ? this.element.velocity({
                        right: -this.options.sidenavWidth
                    }, {
                        duration: this.options.transitionDuration,
                        easing: this.options.transitionEasing,
                        delay: this.options.transitionDelayTime
                    }) : this.element.velocity({
                        left: -this.options.sidenavWidth
                    }, {
                        duration: this.options.transitionDuration,
                        easing: this.options.transitionEasing,
                        delay: this.options.transitionDelayTime
                    })
                },
                _contentPushed: function(t, e, i) {
                    return t.velocity({
                        translateX: e
                    }, {
                        duration: this.options.transitionDuration,
                        easing: this.options.transitionEasing,
                        delay: i
                    })
                }
            }), t.widget.bridge("btxCollapsedMenu", t.bateaux.collapsedMenu)
        }).call(e, i(1))
    },
    506: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.content", {
                options: {
                    isHorizontalScroll: !1,
                    isVerticalScroll: !1,
                    isHalfPageScroll: !1,
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    frameWidth: 0
                },
                _create: function() {
                    return this.element.hasClass("btx-scrollpage") ? this.element.btxOnePageScroll({
                        isHorizontalScroll: this.options.isHorizontalScroll,
                        isVerticalScroll: this.options.isVerticalScroll,
                        isHalfPageScroll: this.options.isHalfPageScroll,
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth
                    }) : this.element.hasClass("btx-content--no-header") ? (this.element.find(".btx-section--fit-height[data-index=0]").btxSetSize({
                        type: "header",
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth
                    }), this.element.find(".btx-section--fit-height:not(.btx-section--fit-height[data-index=0])").btxSetSize({
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth
                    })) : this.element.find(".btx-section--fit-height").btxSetSize({
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth
                    })
                }
            }), t.widget.bridge("btxContent", t.bateaux.content)
        }).call(e, i(1))
    },
    507: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.countdown", {
                options: {
                    timestamp: 0
                },
                _create: function() {
                    var t, e, i;
                    return e = this, t = this.element.attr("class").match(/btx-countdown--(\S+)/), i = t ? t[1] : "group", "group" === i ? this.digitClass = "digit" : this.digitClass = "digit btx-s-text-bg", this.timestamp = this.element.data("timestamp") || this.options.timestamp, setInterval(function() {
                        return e._tick()
                    }, 300)
                },
                _tick: function() {
                    var t, e, i, n, s;
                    return s = 604800, t = 86400, e = 3600, n = 60, i = Math.floor((this.timestamp - Date.now()) / 1e3), i < 0 ? void(i = 0) : (this.element.find(".btx-countdown-item[data-label='week']").length && (this.week = Math.floor(i / s), i -= this.week * s, this._updateTimer("week", this.week)), this.element.find(".btx-countdown-item[data-label='day']").length && (this.day = Math.floor(i / t), i -= this.day * t, this._updateTimer("day", this.day)), this.hour = Math.floor(i / e), i -= this.hour * e, this._updateTimer("hour", this.hour), this.minute = Math.floor(i / n), i -= this.minute * n, this._updateTimer("minute", this.minute), this.second = i, this._updateTimer("second", this.second))
                },
                _updateTimer: function(t, e) {
                    var i, n, s;
                    return i = this.element.find(".btx-countdown-item[data-label=" + t + "]"), n = i.find(".btx-countdown-label"), 1 === e ? n.text(t) : n.text(t + "s"), s = String(e).split(""), s.length < 2 ? (s.unshift("0"), this._updateDigit(s, t)) : this._updateDigit(s, t)
                },
                _updateDigit: function(e, i) {
                    var n, s, o, a, r;
                    if (r = this, n = this.element.find(".btx-countdown-item[data-label=" + i + "]"), s = n.find(".btx-countdown-number"), 0 === n.find(".digit").length ? (o = this.digitClass, t.each(e, function(e, i) {
                            var n;
                            return n = '<span class="digit-container">\n   <span class="' + o + '" data-digit="' + i + '">' + i + "</span>\n</span>", t(n).appendTo(s)
                        })) : (a = e.length, n.find(".digit").length > e.length && n.find(".digit-container").eq(0).remove(), t.each(e, function(t, e) {
                            var i, s;
                            if (i = n.find(".digit-container").eq(t), s = i.find(".digit"), e = parseInt(e), e !== s.data("digit")) return s.data("digit", e), s.text(e)
                        })), this.element.attr("data-background-color") && this.element.find(".digit").css("background-color", this.element.data("background-color")), this.element.attr("data-border-radius")) return this.element.find(".digit").css("border-radius", this.element.data("border-radius") + "px")
                }
            }), t.widget.bridge("btxCountdown", t.bateaux.countdown)
        }).call(e, i(1))
    },
    508: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.counter", {
                options: {
                    startAt: 0,
                    easing: "swing",
                    duration: 2e3
                },
                _create: function() {
                    return this.startAt = this.element.data("start") || this.options.startAt, this._animate()
                },
                _animate: function() {
                    var t, e, i, n, s, o, a, r, l, d;
                    if (r = this, i = this.element, n = i.text().toString(), n.indexOf(",") >= 0) {
                        if (s = n.replace(/[^0-9,]/g, ""), a = parseInt(s.replace(/,/g, ""), 10), d = n.split(s), o = d[0] || "", l = d[1] || "", s.length && d.length > 1) return i.text(o + this.startAt + l), i.prop("counter", this.startAt), i.animate({
                            counter: a
                        }, {
                            duration: this.options.duration,
                            easing: this.options.easing,
                            step: function() {
                                return i.text(r._commaSeparateNumber(Math.round(this.counter), o, l))
                            },
                            complete: function() {
                                return i.text(o + r._commaSeparateNumber(Math.round(a)) + l)
                            }
                        })
                    } else if (s = n.replace(/[^0-9.]/g, ""), t = s.split(".")[1] ? s.split(".")[1] : 0, e = t ? t.toString().length : 0, a = parseFloat(s).toFixed(e), d = n.split(s), o = d[0] || "", l = d[1] || "", s.length) return i.prop("counter", this.startAt), i.animate({
                        counter: a
                    }, {
                        duration: this.options.duration,
                        easing: this.options.easing,
                        step: function(t) {
                            return i.text(o + parseFloat(t).toFixed(e) + l)
                        },
                        complete: function() {
                            return i.text(o + a + l)
                        }
                    })
                },
                _commaSeparateNumber: function(t, e, i) {
                    for (var n;
                        /(\d+)(\d{3})/.test(t.toString());) {
                        if (n = t.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,"), !e && !i) return n;
                        if (e && i) return e + n + i;
                        if (e) return e + n;
                        if (i) return n + i
                    }
                }
            }), t.widget.bridge("btxCounter", t.bateaux.counter)
        }).call(e, i(1))
    },
    509: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.dynamicMenuColor", {
                options: {
                    isHorizontalScroll: !1,
                    isVerticalScroll: !1,
                    isSidenav: !1,
                    controller: null,
                    defaultScheme: "light",
                    frameWidth: 0,
                    mobile: !1,
                    mobileNavbarHeight: 60
                },
                _create: function() {
                    var i, n, s, o, a, r, l, d, h, u, c;
                    return o = this.element, n = this.options.controller, l = this.options.isSidenav, r = this.options.mobile, a = this.options.frameWidth, s = this.options.defaultScheme, i = [], d = r ? "navbar--mobile" : l ? "side-navbar-" : "navbar-", u = t(".js-dynamic-navbar"), this.options.isHorizontalScroll || this.options.isVerticalScroll ? (u.each(function(e, n) {
                        var o;
                        return o = t(n).data("scheme"), o ? i.push(o) : i.push(s)
                    }), o.addClass("btx-" + d + "-" + i[0]), t(".btx-main-wrapper").on("beforeChange", function(t, e, n, s) {
                        return o.removeClass("btx-" + d + "-dark btx-" + d + "-light").addClass("btx-" + d + "-" + i[s])
                    })) : (r ? h = 60 : l ? h = 80 : this.element.attr("data-fixed") ? (c = this.element.data("transition"), h = "default" === c ? this.element.outerHeight() : this.element.data("height_fixed")) : h = this.element.outerHeight(), u.each(function(r, l) {
                        var u, c, p;
                        return c = t(l), u = c.data("scheme"), u ? i.push(u) : i.push(s), p = new e.Scene({
                            triggerElement: c[0],
                            triggerHook: "onLeave",
                            offset: -h / 2 - a
                        }), p.addTo(n), p.on("enter", function() {
                            return o.removeClass("btx-" + d + "-dark btx-" + d + "-light").addClass("btx-" + d + "-" + i[r])
                        }), p.on("leave", function() {
                            return 0 !== r ? o.removeClass("btx-" + d + "-dark btx-" + d + "-light").addClass("btx-" + d + "-" + i[r - 1]) : o.removeClass("btx-" + d + "-dark btx-" + d + "-light")
                        })
                    }))
                }
            }), t.widget.bridge("btxDynamicMenuColor", t.bateaux.dynamicMenuColor)
        }).call(e, i(1))
    },
    510: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.featuredPost", {
                options: {
                    isResponsive: !0,
                    scrollbarOptions: {
                        scrollInertia: 2e3,
                        axis: "x",
                        setHeight: !1,
                        mouseWheel: {
                            axis: "x",
                            preventDefault: !1,
                            invert: !0
                        },
                        advanced: {
                            updateOnImageLoad: !0
                        },
                        scrollbarPosition: "outside",
                        autoHideScrollbar: !0
                    }
                },
                _create: function() {
                    var t, e;
                    return t = this.element.attr("class").match(/btx-featuredpost--(\S+)/), e = t ? t[1] : "default", "scroll" === e ? this._initializeScrollStyle() : "carousel" === e ? this.element.find(".btx-featuredpost-content").btxCarousel({
                        isResponsive: this.options.isResponsive,
                        sliderOptions: {
                            infinite: !0,
                            speed: 800,
                            cssEase: "ease-in"
                        }
                    }) : void 0
                },
                _initializeScrollStyle: function() {
                    var e, i, n, s;
                    return s = 0, i = this.element.data("height") || 500, n = this.options.scrollbarOptions, t.isNumeric(i) === !0 ? n.setHeight = i : n.setHeight = !1, e = this.element.find(".btx-entry-media"), e.each(function(e, n) {
                        return s += t(n).width() / t(n).height() * i
                    }), this.element.find(".btx-featuredpost-content").width(s), this.element.mCustomScrollbar(n)
                }
            }), t.widget.bridge("btxFeaturedPost", t.bateaux.featuredPost)
        }).call(e, i(1))
    },
    511: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.footerParallax", {
                options: {
                    isResponsive: !0,
                    mobileScreenWidth: 768
                },
                _create: function() {
                    var e;
                    return e = this, this.wrapper = this.element, this.footer = this.element.find(".btx-footer"), t(window).load(function() {
                        return e._setFooterHeight()
                    }), this._on(t(window), {
                        resize: t.proxy(this._setFooterHeight)
                    })
                },
                _setFooterHeight: function() {
                    var e, i;
                    return i = this, e = this.options.mobileScreenWidth, setTimeout(function() {
                        return t(window).width() > e ? i.wrapper.css("padding-bottom", i.footer.outerHeight() + "px") : i.wrapper.css("padding-bottom", "")
                    }, 100)
                }
            }), t.widget.bridge("btxFooterParallax", t.bateaux.footerParallax)
        }).call(e, i(1))
    },
    512: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.onePageScroll", {
                options: {
                    fullPageOptions: {
                        main: ".btx-main-wrapper",
                        sectionContainer: ".btx-section"
                    },
                    halfPageOptions: {
                        sectionContainer: ".btx-box"
                    },
                    slickOptions: {
                        slidesToScroll: 1,
                        slidesToShow: 1,
                        vertical: !0,
                        dots: !0,
                        infinite: !1,
                        arrows: !1,
                        swipe: !1
                    },
                    tabletScreen: 960,
                    isHorizontalScroll: !1,
                    isVerticalScroll: !0,
                    isHalfPageScroll: !1,
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    frameWidth: 0
                },
                _create: function() {
                    var e, i, n;
                    if (this.options.isMobileOrTablet && this.options.isResponsive) return this._initializeMobileDevice();
                    if (this.lastAnimation = 0, n = t(window).height(), this.windowWidth = t(window).width(), this.slickOptions = this.options.slickOptions, this.options.isHorizontalScroll || this.options.isVerticalScroll) this.main = this.element.find(this.options.fullPageOptions.main), this.slickOptions.vertical = !!this.options.isVerticalScroll, this.element.btxSetSize({
                        type: "header",
                        item: ".btx-section",
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth,
                        fluid: !1
                    });
                    else if (this.options.isHalfPageScroll) {
                        if (e = this.element.find(".btx-row").first(), i = e.children(), 2 !== i.length) return;
                        if (this.firstContainer = i.first(), this.lastContainer = i.last(), this.firstContainerSlides = this.firstContainer.children(this.options.halfPageOptions.sectionContainer).length, this.lastContainerSlides = this.lastContainer.children(this.options.halfPageOptions.sectionContainer).length, this.firstContainerSlides !== this.lastContainerSlides) return;
                        this.element.btxSetSize({
                            type: "header",
                            item: ".btx-box-inner",
                            isResponsive: this.options.isResponsive,
                            isMobileOrTablet: this.options.isMobileOrTablet,
                            frameWidth: this.options.frameWidth,
                            fluid: !1
                        })
                    }
                    return this.options.isResponsive ? (this.windowWidth > this.options.tabletScreen && this._setSlide(), this._on(t(window), {
                        resize: "_windowResize"
                    })) : this._setSlide()
                },
                _windowResize: function() {
                    var e;
                    return e = t(window).width(), e > this.options.tabletScreen && this.windowWidth <= this.options.tabletScreen ? this._setSlide() : e <= this.options.tabletScreen && this.windowWidth > this.options.tabletScreen && this._unsetSlide(), this.windowWidth = e
                },
                _initializeMobileDevice: function() {
                    var e, i, n, s;
                    return s = this, i = this.options.isResponsive, e = this.options.isMobileOrTablet, this.options.isHorizontalScroll || this.options.isVerticalScroll ? this.element.find(".btx-section").each(function(n, s) {
                        var o;
                        return o = 0 === n ? "header" : "full", t(s).btxSetSize({
                            type: o,
                            fluid: !0,
                            isResponsive: i,
                            isMobileOrTablet: e
                        })
                    }) : this.options.isHalfPageScroll ? (n = this.element.find(".btx-section:first"), this._rearrangeSection(n), this.element.find(".btx-box-inner").each(function(n, s) {
                        var o;
                        return o = 0 === n ? "header" : "full", t(s).btxSetSize({
                            type: o,
                            fluid: !0,
                            isResponsive: i,
                            isMobileOrTablet: e
                        })
                    })) : void 0
                },
                _rearrangeSection: function(e) {
                    var i, n, s, o, a, r, l, d, h, u, c, p, f;
                    if ("btx-split-slide-exp" !== e.attr("id")) return !1;
                    if (l = e.find(".btx-row--main"), 1 !== l.length) return !1;
                    if (n = l.children(), 2 !== n.length) return !1;
                    if (i = n.children(".js-item-box"), !i.length || i.length % 2 !== 0) return !1;
                    for (f = t(n.get(0)), h = t(n.get(1)), o = 0, r = i.length / 2, i.detach(), c = [], s = a = 0, u = r; 0 <= u ? a < u : a > u; s = 0 <= u ? ++a : --a) p = t(i.get(s)), d = t(i.get(s + r)), p.data("halfcol", o++), d.data("halfcol", o++), f.length < r ? (f.append(p), c.push(f.append(d))) : (h.append(p), c.push(h.append(d)));
                    return c
                },
                _setSlide: function() {
                    var e, i;
                    return e = this, i = this.slickOptions, this.options.isHorizontalScroll || this.options.isVerticalScroll ? this.main.btxCarousel({
                        sliderOptions: i
                    }) : this.options.isHalfPageScroll && (this._sortElements(this.lastContainer), i.accessibility = !1, this.firstContainer.btxCarousel({
                        sliderOptions: i
                    }), this.lastContainer.btxCarousel({
                        sliderOptions: {
                            accessibility: !1,
                            initialSlide: this.lastContainerSlides - 1,
                            slidesToScroll: 1,
                            slidesToShow: 1,
                            vertical: !0,
                            dots: !1,
                            infinite: !1,
                            arrows: !1,
                            swipe: !1
                        }
                    }), this.firstContainer.children(".slick-dots").find("li").click(function() {
                        return e.lastContainer.slick("slickGoTo", e.lastContainerSlides - t(this).index() - 1)
                    })), t(document).mousewheel(function(t) {
                        return e._scroll(t)
                    }), this._on(t(document), {
                        keydown: "_keyboardPressed"
                    })
                },
                _unsetSlide: function() {
                    return this.options.isHorizontalScroll || this.options.isVerticalScroll ? this.main.slick("unslick") : this.options.isHalfPageScroll && (this.firstContainer.slick("unslick"), this.lastContainer.slick("unslick"), this._sortElements(this.lastContainer)), t(document).off("mousewheel"), t(document).off("keydown"), this.element.find(".btx-item").trigger("resetScrollPage.btx")
                },
                _sortElements: function(t) {
                    return t.children().each(function(e, i) {
                        return t.prepend(i)
                    })
                },
                _scroll: function(t) {
                    var e;
                    return t.preventDefault(), e = this.options.isHorizontalScroll ? 0 === t.deltaX ? t.deltaY : -t.deltaX : t.deltaY, this._init_scroll(t, e)
                },
                _init_scroll: function(t, e) {
                    var i, n;
                    if (i = e, n = (new Date).getTime(), !(n - this.lastAnimation < 1500)) return i < 0 ? this._moveDown() : i > 0 && this._moveUp(), this.lastAnimation = n
                },
                _keyboardPressed: function(e) {
                    var i, n, s, o;
                    switch (i = t(e.target), o = i.prop("tagName").toLowerCase(), this.options.isHorizontalScroll ? (s = 37, n = 39) : (s = 38, n = 40), e.which) {
                        case s:
                            if ("input" !== o && "textarea" !== o) return this._moveUp();
                            break;
                        case n:
                            if ("input" !== o && "textarea" !== o) return this._moveDown();
                            break;
                        case 32:
                            if ("input" !== o && "textarea" !== o) return this._moveDown();
                            break;
                        case 33:
                            if ("input" !== o && "textarea" !== o) return this._moveUp();
                            break;
                        case 34:
                            if ("input" !== o && "textarea" !== o) return this._moveDown()
                    }
                },
                _moveUp: function() {
                    return this.options.isHorizontalScroll || this.options.isVerticalScroll ? this.main.slick("slickPrev") : this.options.isHalfPageScroll ? (this.firstContainer.slick("slickPrev"), this.lastContainer.slick("slickNext")) : void 0
                },
                _moveDown: function() {
                    return this.options.isHorizontalScroll || this.options.isVerticalScroll ? this.main.slick("slickNext") : this.options.isHalfPageScroll ? (this.firstContainer.slick("slickNext"), this.lastContainer.slick("slickPrev")) : void 0
                }
            }), t.widget.bridge("btxOnePageScroll", t.bateaux.onePageScroll)
        }).call(e, i(1))
    },
    513: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.gallery", {
                options: {
                    isResponsive: !0,
                    masonryOptions: {
                        columnWidth: ".btx-masonry-sizer",
                        itemSelector: ".btx-gallery-item"
                    },
                    scrollbarOptions: {
                        scrollInertia: 2e3,
                        axis: "x",
                        setHeight: !1,
                        mouseWheel: {
                            axis: "x",
                            preventDefault: !1,
                            invert: !0
                        },
                        advanced: {
                            updateOnImageLoad: !0
                        },
                        scrollbarPosition: "outside",
                        autoHideScrollbar: !0
                    }
                },
                _create: function() {
                    var t, e, i, n;
                    if (e = this.element.attr("class").match(/btx-gallery--(\S+)/), n = e ? e[1] : "default", this.content = this.element.find(".btx-gallery-content"), t = this.element.find(".btx-gallery-item"), i = this, "scroll" === n ? this._initializeScrollStyle() : "masonry" === n ? (this._initializeMasonryStyle(), this.element.on("hiddenOpen.btx", function() {
                            return i._initializeMasonryStyle()
                        })) : "grid" === n ? (this._initializeGridStyle(), this.element.on("hiddenOpen.btx", function() {
                            return i._initializeGridStyle()
                        })) : "carousel" === n && this._initializeCarouselStyle(), this.element.attr("data-popup")) return t.magnificPopup({
                        delegate: 'a:not(".slick-cloned")',
                        type: "image",
                        gallery: {
                            enabled: !0,
                            navigateByImgClick: !0,
                            arrowMarkup: '<span title="%title%" class="btx-modal-button btx-s-text-contrast-color btx-s-text-bg btx-modal-button-%dir% fa fa-ln-arrow-%dir%"></span>',
                            tPrev: "Previous",
                            tNext: "Next"
                        },
                        image: {
                            verticalFit: !0,
                            tError: "The image could not be loaded.",
                            titleSrc: function(t) {
                                if (t.el.attr("title")) return '<span class="btx-modal-caption">' + t.el.attr("title") + "</span>"
                            }
                        },
                        zoom: {
                            enabled: !0,
                            duration: 300,
                            opener: function(t) {
                                return t.find("img")
                            }
                        },
                        closeMarkup: '<span title="%title%" class="mfp-close btx-modal-close fa fa-ln-cross"></span>'
                    })
                },
                _initializeScrollStyle: function() {
                    var e, i, n, s;
                    return s = 0, i = this.element.data("height") || 500, n = this.options.scrollbarOptions, t.isNumeric(i) === !0 ? n.setHeight = i : n.setHeight = !1, e = this.element.find(".btx-gallery-media"), this.element.imagesLoaded(function(o) {
                        return function() {
                            return e.find("img").each(function(e, n) {
                                var o, a;
                                return a = t(n).attr("width"), o = t(n).attr("height"), s += a / o * i
                            }), o.element.find(".btx-gallery-content").width(s), o.element.mCustomScrollbar(n)
                        }
                    }(this))
                },
                _initializeMasonryStyle: function() {
                    return this.element.imagesLoaded(function(t) {
                        return function() {
                            return t.content.masonry(t.options.masonryOptions)
                        }
                    }(this))
                },
                _initializeGridStyle: function() {
                    return this.element.imagesLoaded(function(t) {
                        return function() {
                            return t.content.isotope({
                                layoutMode: "fitRows"
                            })
                        }
                    }(this))
                },
                _initializeCarouselStyle: function() {
                    var t, e, i, n, s, o, a, r, l;
                    return o = this.element.find(".btx-gallery-thumbnail"), i = Date.now().toString(), e = "js-gallery-carousel-" + i.substr(i.length - 3), this.element.addClass(e), o.length ? (n = o.attr("class").match(/btx-gallery-thumbnail--(\S+)/), a = n ? n[1] : "bottom", l = this.element.find(".btx-gallery-item").length, "bottom" !== a && (r = !0), this.content.btxCarousel({
                        isResponsive: this.options.isResponsive,
                        sliderOptions: {
                            infinite: !0,
                            fade: !0,
                            asNavFor: "." + e + " .btx-gallery-thumbnail"
                        }
                    }), s = o.data("thumbnail"), t = !(s >= l), o.btxCarousel({
                        isResponsive: this.options.isResponsive,
                        sliderOptions: {
                            infinite: !0,
                            slidesToShow: s,
                            vertical: r,
                            asNavFor: "." + e + " .btx-gallery-content",
                            focusOnSelect: !0,
                            centerMode: t,
                            centerPadding: 0,
                            arrows: !1
                        }
                    }), s >= l ? this.content.on("beforeChange", function(t, e, i, n) {
                        return o.find(".btx-gallery-thumbnail-item").removeClass("slick-current").eq(n).addClass("slick-current")
                    }) : void 0) : this.element.find(".btx-gallery-content").btxCarousel({
                        isResponsive: this.options.isResponsive
                    })
                }
            }), t.widget.bridge("btxGallery", t.bateaux.gallery)
        }).call(e, i(1))
    },
    514: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.headerWidgets", {
                options: {
                    delta: 100
                },
                _create: function() {
                    return this.navbar = t(".btx-navbar"), this.button = t(".js-header-headerwidget-btn"), this.lastScrollTop = 0, this.didHide = !0, this._on(this.button, {
                        click: "_toggleHeaderWidgets"
                    }, "classChanged"), this._on(t(window), {
                        scroll: "_windowDidScroll"
                    })
                },
                _windowDidScroll: function() {
                    var e, i;
                    if (e = this.lastScrollTop, i = t(window).scrollTop(), !(Math.abs(e - i) < this.options.delta)) return this._hideHeaderWidgets(), this.lastScrollTop = i
                },
                _toggleHeaderWidgets: function(t) {
                    return t.preventDefault(), this.element.hasClass("active") ? this._hideHeaderWidgets() : this._showHeaderWidgets()
                },
                _showHeaderWidgets: function() {
                    return this._setHeaderWidgetsPosition(), this.element.velocity("slideDown", {
                        duration: 400,
                        ease: "ease"
                    }), this.element.addClass("active"), this.didHide = !1
                },
                _hideHeaderWidgets: function() {
                    if (this.didHide === !1) return this.element.velocity("slideUp", {
                        duration: 200
                    }), this.element.removeClass("active"), this.didHide = !0
                },
                _setHeaderWidgetsPosition: function() {
                    var e, i;
                    return e = this.navbar.outerHeight(), i = 0, this.element.hasClass("btx-header-widgets--fixed") && (i = e, t(".btx-layout--frame").length && (i += t(".btx-frame--top").height())), this.element.css("top", i)
                }
            }), t.widget.bridge("btxHeaderWidgets", t.bateaux.headerWidgets)
        }).call(e, i(1))
    },
    515: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.message", {
                _create: function() {
                    return this._on(this.element, {
                        "click .js-close": "_closeButtonClick"
                    })
                },
                _closeButtonClick: function(e) {
                    return this.element.fadeOut(function() {
                        return t(this).remove()
                    })
                }
            }), t.widget.bridge("btxMessage", t.bateaux.message)
        }).call(e, i(1))
    },
    516: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.menuMobile", {
                options: {
                    submenuClass: ".sub-menu",
                    megamenuClass: ".btx-mega-menu"
                },
                _create: function() {
                    var e, i;
                    return i = this, e = this.element.find(this.options.submenuClass + ", " + this.options.megamenuClass), e.hide(), e.each(function(e, n) {
                        return n = t(n), n.prev().on("click", function(t) {
                            return t.preventDefault(), i._menuClicked(t, n)
                        })
                    })
                },
                _menuClicked: function(e, i) {
                    var n, s, o;
                    if (s = this, n = t(e.currentTarget), i.toggleClass("toggle-active").slideToggle(300), o = i.hasClass("toggle-active") ? n.closest("li").siblings().find(".sub-menu, .btx-mega-menu") : i.find(".sub-menu"), o.length > 0) return this._closeChildrenMenu(o)
                },
                _closeChildrenMenu: function(e) {
                    return e.each(function(e, i) {
                        var n;
                        if (n = t(i), n.hasClass("toggle-active")) return n.slideUp(300).removeClass("toggle-active")
                    })
                }
            }), t.widget.bridge("btxMenuMobile", t.bateaux.menuMobile)
        }).call(e, i(1))
    },
    517: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.milestone", {
                options: {
                    controller: null,
                    hasPageLoad: !1
                },
                _create: function() {
                    var e, i, n;
                    if (n = this, e = this.element, e.attr("data-counter-animation")) return i = this.options.hasPageLoad, e.is(":visible") ? i ? t(window).load(function() {
                        return n._animateNumber(e)
                    }) : this._animateNumber(e) : e.on("hiddenOpen.btx", function() {
                        return e.find(".btx-milestone-item").each(function(t, i) {
                            return e.find(".btx-milestone-number").btxCounter()
                        }), e.off("hiddenOpen.btx")
                    })
                },
                _animateNumber: function(i) {
                    var n, s, o;
                    return n = i.find(".btx-milestone-item"), s = i.find(".btx-milestone-number"), n.hasClass("anmt-item") ? n.each(function(e, i) {
                        var n;
                        return n = t(i), n.on("btx.itemAnimated", function() {
                            return s.btxCounter(), n.off("btx.itemAnimated")
                        })
                    }) : (o = new e.Scene({
                        triggerElement: i[0],
                        triggerHook: "onEnter"
                    }), o.addTo(this.options.controller), o.on("enter", function() {
                        return s.btxCounter(), o.destroy()
                    }))
                }
            }), t.widget.bridge("btxMilestone", t.bateaux.milestone)
        }).call(e, i(1))
    },
    518: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.modalTrigger", {
                options: {
                    animation: "mfp-newspaper",
                    magnificPopup: {
                        type: "inline",
                        removalDelay: 500,
                        closeBtnInside: !1,
                        closeMarkup: '<span title="%title%" class="mfp-close btx-modal-close fa fa-ln-cross"></span>'
                    }
                },
                _create: function() {
                    var e, i, n, s;
                    return i = this.element, s = i.attr("href"), n = t(s), e = n.data("animation"), this.options.magnificPopup.callbacks = {
                        beforeOpen: function() {
                            var t;
                            return t = this.st.mainClass, this.st.mainClass = t + " mfp-" + e
                        },
                        open: function() {
                            return this.content.find(".btx-item").trigger("hiddenOpen.btx")
                        }
                    }, this._openPopup()
                },
                _openPopup: function() {
                    return this.element.magnificPopup(this.options.magnificPopup)
                }
            }), t.widget.bridge("btxModalTrigger", t.bateaux.modalTrigger)
        }).call(e, i(1))
    },
    519: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.navbar", {
                options: {
                    mobile: !1,
                    fixed: !1,
                    autohide: !1,
                    fixedClass: "btx-navbar--fixed",
                    altNavbarClass: "btx-navbar--alternate",
                    transition: "default",
                    transitionPoint: 1,
                    stackedMenuHeight: 56,
                    delta: 100,
                    controller: null,
                    showIndicators: !1,
                    submenuRightSpacing: 30,
                    isHalfPageScroll: !1,
                    isHorizontalScroll: !1,
                    isVerticalScroll: !1,
                    defaultScheme: "light",
                    frameWidth: 0,
                    isResponsive: !0,
                    tabletScreen: 960
                },
                _create: function() {
                    var e, i, n, s, o, a, r;
                    if (s = this, this.isStacked = this.element.hasClass("btx-navbar--stacked"), a = t(".btx-topbar"), a.length ? (a.css({
                            position: "absolute",
                            display: "block",
                            visibility: "hidden"
                        }), r = a.outerHeight(), a.css({
                            position: "",
                            display: "",
                            visibility: ""
                        })) : r = 0, this.navbarHeight = this.options.mobile ? this.element.data("height") : this.element.data("height") - r, n = this.element.find(".btx-menu"), this.element.btxCollapsedMenu({
                            mobile: this.options.mobile
                        }), n.length && (this.options.mobile ? n.btxMenuMobile() : (o = n.children(".menu-item").children(".sub-menu"), setTimeout(function() {
                            return s._setSubmenuPosition(o)
                        }, 500), this.element.hasClass("btx-navbar--minimal--full") ? n.btxMenuMobile() : (n.superfish({
                            delay: 150,
                            speed: 0,
                            hoverClass: "btx-menu-hover",
                            popUpSelector: ".sub-menu, .btx-mega-menu, .btx-cart-box",
                            animation: {
                                visibility: "show"
                            },
                            animationOut: {
                                visibility: "hide"
                            }
                        }), this.options.isResponsive && !this.element.hasClass("btx-navbar--inline") && (this.sumWidth = 0, this.menuWidth = 0, this.navbarBreak = !1, this.navbarWrapper = this.element.find(".btx-navbar-content-wrapper"), this.mobileNavbar = t(".btx-navbar--mobile"), this.mobileWrapper = this.mobileNavbar.find(".btx-navbar-content-wrapper"), i = this.element.is(":visible"), i || (this.navbarBreak = !0, this.element.css({
                            display: "block",
                            visibility: "hidden"
                        })), setTimeout(function() {
                            return n.children().each(function(e, i) {
                                return s.menuWidth += t(this).width()
                            }), s.isStacked ? s.sumWidth += s.element.find(".btx-navbar-widget").outerWidth(!0) : s.element.hasClass("btx-navbar--minimal--right") ? (s.sumWidth += s.element.find(".btx-navbar-header").outerWidth(!0), s.sumWidth += s.element.find(".btx-collapsed-button").outerWidth(!0)) : (s.sumWidth += s.element.find(".btx-navbar-header").outerWidth(!0), s.sumWidth += s.element.find(".btx-navbar-widget").outerWidth(!0)), i || s.element.css({
                                display: "",
                                visibility: ""
                            }), s._calculateNavbarState()
                        }, 500), t(window).on("resize", function() {
                            return s._calculateNavbarState()
                        }))))), this.element.hasClass("btx-navbar--transparent") && !this.options.isHalfPageScroll && this.element.btxDynamicMenuColor({
                            controller: s.options.controller,
                            isHorizontalScroll: s.options.isHorizontalScroll,
                            isVerticalScroll: s.options.isVerticalScroll,
                            defaultScheme: s.options.defaultScheme,
                            frameWidth: s.options.frameWidth,
                            mobile: s.options.mobile
                        }), this.fixed = this.element.data("fixed") || this.options.fixed, this.fixed) return this.autohide = this.element.data("autohide") || this.options.autohide, this.transition = this.element.data("transition") || this.options.transition, this.transitionPoint = this.element.data("transition_point") || this.options.transitionPoint, this.lastScrollTop = 0, this.didScroll = !1, this.enableScrollup = !0, this.headerWidgets = t(".btx-header-widgets"), this.offset = r, e = this.element.data("height_fixed") || this.navbarHeight, this.fixedNavbarHeight = Math.max.apply(Math, [this.navbarHeight, e]), this.transitionOffset = this.offset + this.navbarHeight + this.transitionPoint, this._startFixedNavbar()
                },
                _calculateNavbarState: function() {
                    var e;
                    return t(window).width() > this.options.tabletScreen ? (e = this.navbarBreak ? this.mobileWrapper.innerWidth() : this.navbarWrapper.innerWidth(), e - this.sumWidth - this.menuWidth < 10 ? (this.element.css("display", "none"), this.mobileNavbar.css({
                        display: "block",
                        height: this.navbarHeight + "px",
                        "line-height": this.navbarHeight + "px"
                    }), this.navbarBreak = !0) : (this.element.attr("style", ""), this.mobileNavbar.attr("style", ""), this.navbarBreak = !1)) : (this.element.attr("style", ""), this.mobileNavbar.attr("style", ""), this.navbarBreak = !1)
                },
                _setSubmenuPosition: function(e) {
                    var i;
                    return i = this.options.submenuRightSpacing, e.each(function(e, n) {
                        var s, o;
                        return s = t(this).find(".sub-menu"), s.length ? (o = s.eq(s.length - 1), t(this).css("display", "block").removeClass("sub-menu--left"), s.css("display", "block"), o.offset().left + o.width() + i > t(window).width() && t(this).addClass("sub-menu--left"), t(this).css("display", "none"), s.css("display", "none")) : (t(this).css("display", "block").removeClass("sub-menu--left"), t(this).offset().left + t(this).width() > t(window).width() && t(this).addClass("sub-menu--left"), t(this).css("display", "none"))
                    })
                },
                _startFixedNavbar: function() {
                    var e;
                    if (this._initializeFixed(), "default" !== this.transition && this._initializeTransition(), e = this, this.autohide) return t(window).scroll(function(t) {
                        return e.didScroll = !0, e._windowDidScroll()
                    })
                },
                _windowDidScroll: function(e) {
                    var i, n;
                    if (i = this.lastScrollTop, n = t(window).scrollTop(), !(Math.abs(i - n) < this.options.delta || this.didScroll === !1)) {
                        if (n > i) {
                            if (n < this.offset + this.navbarHeight) return;
                            this._hideNavbar(this.fixedNavbarHeight)
                        } else this.enableScrollup && this._showNavbar();
                        return this.lastScrollTop = n
                    }
                },
                _showNavbar: function() {
                    return this.element.css("top", "")
                },
                _hideNavbar: function(t) {
                    return this.element.css("top", -t), this._hideMegaMenu()
                },
                _hideMegaMenu: function() {
                    var t, e, i;
                    return e = this.element.find(".btx-mega-menu"), i = this.element.find(".btx-menu > li > .sub-menu"), t = this.element.find(".btx-cart-box"), e.hide(), i.hide(), t.hide()
                },
                _initializeFixed: function() {
                    var t, i, n;
                    return i = this.offset, this.isStacked && (i += this.navbarHeight - this.options.stackedMenuHeight), "custom-show" === this.transition && (i = this.transitionOffset), t = new e.Scene({
                        triggerElement: "body",
                        triggerHook: "onLeave",
                        offset: i
                    }), t.addTo(this.options.controller), this.options.showIndicators === !0 && t.addIndicators({
                        name: "fixed"
                    }), "custom-show" !== this.transition && t.setClassToggle(this.element[0], this.options.fixedClass), n = this, t.on("enter", function() {
                        return n._fixedNavbarActivated()
                    }), t.on("leave", function() {
                        return n._fixedNavbarDeactivated()
                    })
                },
                _fixedNavbarActivated: function() {
                    if (this.headerWidgets.addClass("btx-header-widgets--fixed"), "custom-show" === this.transition) return this.element.removeClass("btx-neutral-transition"), this.autohide ? this._hideNavbar(this.fixedNavbarHeight) : this._showNavbar(), this.enableScrollup = !0, this.element.addClass(this.options.fixedClass)
                },
                _fixedNavbarDeactivated: function() {
                    return "custom-show" === this.transition ? this.autohide ? (this._showNavbar(), this.enableScrollup = !1) : this._hideNavbar(this.fixedNavbarHeight) : (this.headerWidgets.removeClass("btx-header-widgets--fixed"), this._showNavbar())
                },
                _initializeTransition: function() {
                    var t, i, n;
                    return i = this.transitionOffset, "custom-show" === this.transition && (i = this.offset + this.navbarHeight, this._initializeNeutralizer()), t = new e.Scene({
                        triggerElement: "body",
                        triggerHook: "onLeave",
                        offset: i
                    }), t.addTo(this.options.controller), t.setClassToggle(this.element[0], this.options.altNavbarClass), this.options.showIndicators === !0 && t.addIndicators({
                        name: "transition"
                    }), n = this, t.on("enter", function() {
                        return n._altNavbarActivated()
                    }), t.on("leave", function() {
                        return n._altNavbarDeactivated()
                    })
                },
                _altNavbarActivated: function() {
                    if ("custom-show" === this.transition) return this.element.hasClass(this.options.fixedClass) || this.element.addClass("btx-neutral-transition"), this._hideNavbar(this.fixedNavbarHeight)
                },
                _altNavbarDeactivated: function() {
                    if ("custom-show" === this.transition) return this.autohide === !1 && (this.element.addClass("btx-neutral-transition"), this.element.removeClass(this.options.fixedClass)), this._showNavbar(0), this.enableScrollup = !0
                },
                _initializeNeutralizer: function() {
                    var t, i, n;
                    return i = this.offset + 1, this.isStacked && (i = this.offset + this.navbarHeight - this.options.stackedMenuHeight), t = new e.Scene({
                            triggerElement: "body",
                            triggerHook: "onLeave",
                            offset: i
                        }), t.addTo(this.options.controller),
                        this.options.showIndicators === !0 && t.addIndicators({
                            name: "neutralizer"
                        }), n = this, t.on("leave", function() {
                            return n._neutralizerActivated()
                        })
                },
                _neutralizerActivated: function() {
                    return this.headerWidgets.removeClass("btx-header-widgets--fixed"), this.element.removeClass(this.options.fixedClass)
                }
            }), t.widget.bridge("btxNavbar", t.bateaux.navbar)
        }).call(e, i(1))
    },
    520: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.paginate", {
                options: {
                    style: "click",
                    action: "bateaux_blog_entries"
                },
                _create: function() {
                    var i, n;
                    return i = this.element.attr("class").match(/btx-pagination--(\S+)/), this.style = i ? i[1] : "click", this.buttonText = this.element.find(".btnx-text"), this.optionInput = this.element.find("input[type=hidden]"), this.allPosts = this.optionInput.data("posts"), this.index = 1, this.paginateOptions = JSON.parse(this.optionInput.val()), this.postToFind = this.paginateOptions.query_args.posts_per_page || 10, this.windowLoaded = !1, this.scrollReached = !1, n = this, "click" === this.style ? n._on(n.element, {
                        "click a": "_buttonClicked"
                    }) : "scroll" === this.style && (this.scene = new e.Scene({
                        triggerElement: this.element[0],
                        triggerHook: "onEnter"
                    }), this.scene.addTo(this.options.controller), this.scene.on("enter", function(t) {
                        return n._scrollReached()
                    })), t(window).load(function() {
                        return n._windowLoaded()
                    })
                },
                _buttonClicked: function(t) {
                    if (t.preventDefault(), this.windowLoaded) return this._loadMore()
                },
                _scrollReached: function() {
                    var t;
                    return t = this, this.windowLoaded ? this._loadMore() : this.element.on("windowLoaded.btx", function() {
                        return t._loadMore()
                    })
                },
                _windowLoaded: function() {
                    return this.windowLoaded = !0, this.element.trigger("windowLoaded.btx")
                },
                _loadMore: function() {
                    var e, i, n, s, o, a, r;
                    return a = this, o = this.scene, r = this.style, n = this.element, e = this.buttonText, s = this.optionInput.data("loaded"), this.element.off("windowLoaded.btx"), n.toggleClass("loading"), e.text("Loading"), i = t.extend({}, {
                        action: this.options.action,
                        pagination_index: this.index,
                        post_not_in: s
                    }, this.paginateOptions), this.index++, t.post(BateauxApp.ajaxUrl, i).done(function(t) {
                        if (n.trigger("load.btxpagination", t.data), setTimeout(function() {
                                return n.toggleClass("loading"), e.text("Load More")
                            }, 500), a.postToFind * a.index >= a.allPosts && (n.remove(), "scroll" === r)) return o.destroy()
                    }).fail(function(t) {
                        return e.text("error"), n.addClass("error")
                    })
                }
            }), t.widget.bridge("btxPaginate", t.bateaux.paginate)
        }).call(e, i(1))
    },
    521: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.pinned", {
                options: {
                    controller: null,
                    offset: -30,
                    duration: 0,
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    showIndicators: !0,
                    mobileScreen: 768
                },
                _create: function() {
                    var i, n, s, o, a, r;
                    if (this.options.isMobileOrTablet && this.options.isResponsive);
                    else if (this.offset = this.options.offset, this.duration = this.options.duration, this.pinned = !0, this.windowWidth = t(window).width(), a = this, this.element.attr("data-pinned") && (o = this.element.data("pinned"), this.relatedElement = this.element.closest(".btx-row").find(o), this.relatedElement.length && (i = t(".btx-navbar"), i.attr("data-fixed") && (r = i.data("transition"), n = "default" === r ? i.outerHeight() : i.data("height_fixed"), this.offset -= n), this.scene = new e.Scene({
                            triggerElement: this.element[0],
                            triggerHook: "onLeave",
                            duration: this.duration,
                            offset: this.offset
                        }), this.scene.addTo(this.options.controller), this.options.isResponsive ? this.windowWidth > this.options.mobileScreen ? this.relatedElement.imagesLoaded(function(t) {
                            return function() {
                                return setTimeout(function() {
                                    return a._setPin()
                                }, 1e3)
                            }
                        }(this)) : this.pinned = !1 : this.relatedElement.imagesLoaded(function(t) {
                            return function() {
                                return setTimeout(function() {
                                    return a._setPin()
                                }, 1e3)
                            }
                        }(this)), t(window).on("resize", function(t) {
                            return clearTimeout(a.resizeTimer), a.resizeTimer = setTimeout(function() {
                                return a._windowResize()
                            }, 500)
                        }), s = this.relatedElement.find(".js-load-more"), s.length))) return s.on("load.btxpagination", function(t) {
                        return setTimeout(function() {
                            return a.updateDuration()
                        }, 1e3)
                    })
                },
                calculateHeight: function() {
                    var t, e;
                    return e = this.relatedElement.outerHeight(), t = this.element.outerHeight(), this.options.isResponsive && e < t ? this._removePin() : this.duration = e - t
                },
                updateDuration: function() {
                    return this.calculateHeight(), this.scene.duration(this.duration)
                },
                _windowResize: function() {
                    var e;
                    return e = t(window).width(), this.options.isResponsive ? e > this.options.mobileScreen ? (this.updateDuration(), this.windowWidth <= this.options.mobileScreen && !this.pinned && this._setPin()) : e <= this.options.mobileScreen && this.windowWidth > this.options.mobileScreen && this._removePin() : this.updateDuration(), this.windowWidth = e
                },
                _setPin: function() {
                    return this.scene.setPin(this.element[0]), this.updateDuration(), this.pinned = !0
                },
                _removePin: function() {
                    return this.scene.removePin(!0), this.pinned = !1
                }
            }), t.widget.bridge("btxPinned", t.bateaux.pinned)
        }).call(e, i(1))
    },
    522: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.portfolio", {
                filter: null,
                controller: null,
                isResponsive: !0,
                isMobileOrTablet: !1,
                options: {
                    isotopeContainer: ".btx-portfolio-content",
                    masonryOptions: {
                        itemSelector: ".btx-entry",
                        columnWidth: ".btx-masonry-sizer"
                    }
                },
                _create: function() {
                    var e, i;
                    return i = this, e = this.element.attr("class").match(/btx-portfolio--(\S+)/), this.style = e ? e[1] : "default", this.filterBar = this.element.find(".btx-filter-bar"), this.initial_entry = this.element.find(".btx-entry"), this.isAnimatedItem = this.element.find(".btx-entry-inner").hasClass("anmt-item"), this.isotope = this.element.find(this.options.isotopeContainer), "carousel" === this.style ? this.isotope.btxCarousel({
                        isResponsive: this.options.isResponsive
                    }) : (this.isotope.imagesLoaded(function(t) {
                        return function() {
                            return t._runIsotope()
                        }
                    }(this)), this.element.on("hiddenOpen.btx", function() {
                        return i.isotope.imagesLoaded(function(t) {
                            return function() {
                                return i._runIsotope()
                            }
                        }(this))
                    }), this.pagination = this.element.find(".js-load-more"), this.paginationInput = this.pagination.find("input[type=hidden]"), this.loadedPosts = this.paginationInput.data("loaded"), this.pagination.length && (this.pagination.btxPaginate({
                        controller: this.options.controller,
                        action: "bateaux_portfolio_entries"
                    }), this.filterBar.length && (this.currentCat = [], this.filterBar.find(".js-portfolio-filter").each(function(e, n) {
                        return i.currentCat.push(t(this).data("filter"))
                    })), this.initial_entry.addClass("loaded"), this.pagination.on("load.btxpagination", t.proxy(this._paginationLoaded, this)))), this._previewPopup()
                },
                _paginationLoaded: function(e, i) {
                    var n, s, o, a, r, l, d;
                    return i.result ? (d = this, o = this.isotope, a = t(i.result.content), n = [], r = [], s = [], a.each(function(e, i) {
                        if (1 === i.nodeType && (n.push(i), d.filterBar.length)) return r.push(t(this).data("filter"))
                    }), this.filterBar.length && t.each(r, function(t, e) {
                        var i;
                        if (e) return i = e.indexOf(",") > -1 ? e.split(", ") : [e], s = s.concat(i)
                    }), o.isotope("insert", n), o.imagesLoaded(function(t) {
                        return function() {
                            return o.isotope("layout"), setTimeout(function() {
                                return d._animateItems()
                            }, 200)
                        }
                    }(this)), this.filterBar.length && this._addMoreFilters(t.unique(s)), l = this.element.find(".btx-entry:not(.loaded)"), l.addClass("loaded"), this.paginationInput.attr("data-loaded") ? this._addDataLoaded(l) : void 0) : (this.pagination.find(".btnx-text").text("error"), this.pagination.addClass("error"))
                },
                _animateItems: function() {
                    if (this.isAnimatedItem) return this.element.hasClass("container-animated") ? this.element.btxAnimated("initializeAnimation", this.element) : this.element.btxAnimated({
                        offset: .9,
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet
                    })
                },
                _addDataLoaded: function(e) {
                    var i;
                    return i = [], e.each(function(e, n) {
                        var s, o;
                        return s = t(this).attr("class").match(/post-(\S+)/), o = s ? s[1] : null, i.push(o)
                    }), this.loadedPosts = t.merge(i, this.loadedPosts), this.paginationInput.data("loaded", this.loadedPosts)
                },
                _addMoreFilters: function(e) {
                    var i, n;
                    return n = this, i = t(e).not(this.currentCat).get(), t.each(i, function(t, e) {
                        if ("" !== e) return n.filterBar.append('<li><a href="#" class="js-portfolio-filter btx-p-text-color" data-filter="' + e + '">' + e + "</a></li>")
                    }), this.currentCat = this.currentCat.concat(i)
                },
                _previewPopup: function() {
                    if (this.element.find(".btx-portfolio-preview").length) return this.element.magnificPopup({
                        delegate: ".btx-portfolio-preview i",
                        type: "image",
                        gallery: {
                            enabled: !0,
                            navigateByImgClick: !0,
                            arrowMarkup: '<span title="%title%" class="btx-modal-button btx-s-text-contrast-color btx-s-text-bg btx-modal-button-%dir% fa fa-ln-arrow-%dir%"></span>',
                            tPrev: "Previous",
                            tNext: "Next"
                        },
                        image: {
                            verticalFit: !0,
                            tError: "The image could not be loaded.",
                            titleSrc: function(t) {
                                return '<span class="btx-modal-caption">' + t.el.attr("title") + "</span>"
                            }
                        },
                        closeMarkup: '<span title="%title%" class="mfp-close btx-modal-close fa fa-ln-cross"></span>'
                    })
                },
                _runIsotope: function() {
                    var e;
                    return e = {
                        filter: t.proxy(this._isotopeFilter, this)
                    }, "masonry" === this.style ? e.masonry = this.options.masonryOptions : "grid" === this.style ? (e.layoutMode = "fitRows", e.itemSelector = ".btx-entry") : "list" === this.style && (e.itemSelector = ".btx-entry"), this.isotope.isotope(e), this._on(this.element, {
                        "click .js-portfolio-filter": "_portfolioFilterClicked"
                    })
                },
                _portfolioFilterClicked: function(e) {
                    var i;
                    return e.preventDefault(), i = t(e.currentTarget).attr("data-filter"), this.filter = "all" !== i && i, this.isotope.isotope()
                },
                _isotopeFilter: function(e, i) {
                    var n;
                    return !this.filter || (n = t(i).attr("data-filter") ? t(i).data("filter") : "", n.indexOf(this.filter) > -1)
                }
            }), t.widget.bridge("btxPortfolio", t.bateaux.portfolio)
        }).call(e, i(1))
    },
    523: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.productGallery", {
                _create: function() {
                    var t;
                    if (t = this.element.data("popup"), this.element.btxGallery(), !t) return this._on(this.element, {
                        "mousemove .btx-gallery-item": "_mouseMoveZoom"
                    })
                },
                _mouseMoveZoom: function(e) {
                    var i, n, s, o, a, r, l, d, h, u, c, p;
                    if (i = t(e.currentTarget), u = i.find(".btx-image-zoom"), d = i.offset().left, h = i.offset().top, a = i.width(), o = i.height(), c = u.width(), p = u.height(), r = c / a - 1, l = p / o - 1, u.length > 0) return n = (e.pageX - d) * r, n < 0 && (n = 0), n > c && (n = c), s = (e.pageY - h) * l, s < 0 && (s = 0), s > p && (s = p), u.css({
                        left: -n,
                        top: -s
                    })
                }
            }), t.widget.bridge("btxProductGallery", t.bateaux.productGallery)
        }).call(e, i(1))
    },
    524: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.product", {
                filter: null,
                controller: null,
                isResponsive: !0,
                isMobileOrTablet: !1,
                options: {
                    isotopeContainer: ".btx-product-content",
                    masonryOptions: {
                        itemSelector: ".btx-entry"
                    }
                },
                _create: function() {
                    var e, i;
                    return i = this, e = this.element.attr("class").match(/btx-product-layout--(\S+)/), this.style = e ? e[1] : "grid", this.filterBar = this.element.find(".btx-filter-bar"), this.initial_entry = this.element.find(".btx-entry"), this.isAnimatedItem = this.element.find(".btx-entry-inner").hasClass("anmt-item"), this.isotope = this.element.find(this.options.isotopeContainer), "carousel" === this.style ? this.isotope.btxCarousel({
                        isResponsive: this.options.isResponsive
                    }) : (this.isotope.imagesLoaded(function(t) {
                        return function() {
                            return i._runIsotope()
                        }
                    }(this)), this.element.on("hiddenOpen.btx", function() {
                        return i.isotope.imagesLoaded(function(t) {
                            return function() {
                                return i._runIsotope()
                            }
                        }(this))
                    }), this.pagination = this.element.find(".js-load-more"), this.paginationInput = this.pagination.find("input[type=hidden]"), this.loadedPosts = this.paginationInput.data("loaded"), this.pagination.length ? (this.pagination.btxPaginate({
                        controller: this.options.controller,
                        action: "bateaux_product_entries"
                    }), this.filterBar.length && (this.currentCat = [], this.filterBar.find(".js-product-filter").each(function(e, n) {
                        return i.currentCat.push(t(this).data("filter"))
                    })), this.initial_entry.addClass("loaded"), this.pagination.on("load.btxpagination", t.proxy(this._paginationLoaded, this))) : void 0)
                },
                _paginationLoaded: function(e, i) {
                    var n, s, o, a, r, l, d;
                    return i.result ? (d = this, o = this.isotope, a = t(i.result.content), n = [], r = [], s = [], a.each(function(e, i) {
                        if (1 === i.nodeType && (n.push(i), d.filterBar.length)) return r.push(t(this).data("filter"))
                    }), this.filterBar.length && t.each(r, function(t, e) {
                        var i;
                        if (e) return i = e.indexOf(",") > -1 ? e.split(", ") : [e], s = s.concat(i)
                    }), o.isotope("insert", n), o.imagesLoaded(function(t) {
                        return function() {
                            return o.isotope("layout"), setTimeout(function() {
                                return d._animateItems()
                            }, 200)
                        }
                    }(this)), this.filterBar.length && this._addMoreFilters(t.unique(s)), l = this.element.find(".btx-entry:not(.loaded)"), l.addClass("loaded"), this.paginationInput.attr("data-loaded") ? this._addDataLoaded(l) : void 0) : (this.pagination.find(".btnx-text").text("error"), this.pagination.addClass("error"))
                },
                _animateItems: function() {
                    if (this.isAnimatedItem) return this.element.hasClass("container-animated") ? this.element.btxAnimated("initializeAnimation", this.element) : this.element.btxAnimated({
                        offset: .9,
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet
                    })
                },
                _addDataLoaded: function(e) {
                    var i;
                    return i = [], e.each(function(e, n) {
                        var s, o;
                        return s = t(this).attr("class").match(/post-(\S+)/), o = s ? s[1] : null, i.push(o)
                    }), this.loadedPosts = t.merge(i, this.loadedPosts), this.paginationInput.data("loaded", this.loadedPosts)
                },
                _addMoreFilters: function(e) {
                    var i, n;
                    return n = this, i = t(e).not(this.currentCat).get(), t.each(i, function(t, e) {
                        if ("" !== e) return n.filterBar.append('<li><a href="#" class="js-product-filter btx-p-text-color" data-filter="' + e + '">' + e + "</a></li>")
                    }), this.currentCat = this.currentCat.concat(i)
                },
                _runIsotope: function() {
                    var e, i;
                    return i = this, e = {
                        filter: t.proxy(this._isotopeFilter, this)
                    }, "masonry" === this.style ? e.masonry = this.options.masonryOptions : "grid" === this.style ? (e.layoutMode = "fitRows", e.itemSelector = ".btx-entry") : e.itemSelector = ".btx-entry", this.isotope.isotope(e), this._on(this.element, {
                        "click .js-product-filter": "_productFilterClicked"
                    })
                },
                _productFilterClicked: function(e) {
                    var i;
                    return e.preventDefault(), i = t(e.currentTarget).attr("data-filter"), this.filter = "all" !== i && i, this.isotope.isotope()
                },
                _isotopeFilter: function(e, i) {
                    var n;
                    return !this.filter || (n = t(i).attr("data-filter") ? t(i).data("filter") : "", n.indexOf(this.filter) > -1)
                }
            }), t.widget.bridge("btxProduct", t.bateaux.product)
        }).call(e, i(1))
    },
    525: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.row", {
                options: {
                    isMobileOrTablet: !1,
                    isResponsive: !0,
                    mobileScreen: 768
                },
                _create: function() {
                    var e, i, n;
                    if (this.windowWidth = t(window).width(), this.options.isMobileOrTablet && this.options.isResponsive && (this.windowWidth < this.options.mobileScreen || this.windowWidth === this.options.mobileScreen));
                    else if (e = this.element.find(".js-box-fitted"), e.length > 1) return n = this, i = {}, e.each(function(e, n) {
                        var s, o;
                        return s = t(n), o = s.data("group"), i.hasOwnProperty(o) ? i[o].push(s) : i[o] = [s]
                    }), e.imagesLoaded(function(t) {
                        return function() {
                            return n._doEqualHeight(i)
                        }
                    }(this)), t(window).on("resize", function(t) {
                        return n._windowResize(i)
                    })
                },
                _doEqualHeight: function(e, i) {
                    var n, s, o;
                    return o = this, n = this.options.isResponsive, s = this.options.mobileScreen, t.each(e, function(t, e) {
                        if (e.length <= 1);
                        else {
                            if ("unset" === i) return o._unsetEqualHeight(e);
                            if (!n) return o._setEqualHeight(e);
                            if (o.windowWidth > s) return o._setEqualHeight(e)
                        }
                    })
                },
                _windowResize: function(e) {
                    var i, n;
                    return i = this, n = t(window).width(), n <= this.options.mobileScreen && this.windowWidth > this.options.mobileScreen ? this._doEqualHeight(e, "unset") : (clearTimeout(i.resizeTimer), i.resizeTimer = setTimeout(function() {
                        return i._doEqualHeight(e)
                    }, 200)), this.windowWidth = n
                },
                _setEqualHeight: function(e) {
                    var i, n;
                    return n = 0, i = [], t.each(e, function(t, e) {
                        var s;
                        return e.find(".btx-box-inner").css({
                            height: "",
                            "line-height": ""
                        }), s = e.outerHeight(), i[t] = s - e.height(), n = s > n ? s : n
                    }), t.each(e, function(t, e) {
                        var s;
                        return s = n - i[t], e.find(".btx-box-inner").css({
                            height: s + "px",
                            "line-height": s + "px"
                        })
                    })
                },
                _unsetEqualHeight: function(e) {
                    return t.each(e, function(e, i) {
                        var n, s;
                        return n = i.find(".btx-box-inner"), n.css({
                            height: "",
                            "line-height": ""
                        }), s = n.data("height"), s = t.isNumeric(s) ? s + "px" : s, n.css({
                            height: s,
                            "line-height": s
                        })
                    })
                }
            }), t.widget.bridge("btxRow", t.bateaux.row)
        }).call(e, i(1))
    },
    526: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.scrollTo", {
                options: {
                    target: "",
                    controller: null,
                    duration: 1e3,
                    easing: "easeOut",
                    offset: 30
                },
                _create: function() {
                    var i, n, s, o, a;
                    if (s = this, o = this.element.attr("href") || this.options.target, this.target = t(o), i = this.options.controller, n = t(".btx-navbar"), this.target.length) return n.attr("data-fixed") ? (a = n.data("transition"), "default" === a ? this.offset = n.outerHeight() : this.offset = n.data("height_fixed")) : this.offset = this.options.offset, this.element.closest(".btx-navbar").length && t(window).load(function() {
                        var n;
                        return n = new e.Scene({
                            triggerElement: s.target[0],
                            triggerHook: "onLeave",
                            duration: s.target.height(),
                            offset: -s.offset - 10
                        }), n.setClassToggle(s.element.parent()[0], "current-menu-item").addTo(i), t(window).on("resize", function(t) {
                            return clearTimeout(s.resizeTimer), s.resizeTimer = setTimeout(function() {
                                return s._updateDuration(s.target, n)
                            }, 500)
                        })
                    }), this._on(this.element, {
                        click: "_doScroll"
                    })
                },
                _doScroll: function(t) {
                    var e;
                    if (t.preventDefault(), e = this.target, e.length) return e.velocity("scroll", {
                        duration: this.options.duration,
                        easing: this.options.easing,
                        offset: -this.offset
                    })
                },
                _updateDuration: function(t, e) {
                    var i;
                    return i = t.height(), e.duration(i)
                }
            }), t.widget.bridge("btxScrollTo", t.bateaux.scrollTo)
        }).call(e, i(1))
    },
    527: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.search", {
                options: {
                    delay: 0
                },
                _create: function() {
                    return this.main = this.element.siblings(".btx-navbar-search"), this.closeButton = this.main.find(".btx-close-button"), this.collapsedMenu = this.element.closest(".btx-collapsed-menu"), this.navbar = this.element.closest(".btx-navbar"), this._on(this.element, {
                        click: "_searchClicked"
                    }), this._on(this.closeButton, {
                        click: "_closeClicked"
                    })
                },
                _searchClicked: function(e) {
                    var i, n, s, o, a, r;
                    return e.preventDefault(), i = t(e.currentTarget), a = i.closest(".btx-navbar"), o = this.main, n = this.closeButton, s = this.collapsedMenu, r = a.data("fixed") ? 100 : this.options.delay, t("body").hasClass("btx-unscrollable") || t("body").addClass("btx-unscrollable"), a.addClass("btx-no-transform"), setTimeout(function() {
                        return o.addClass("active"), n.addClass("btx-closed"), s.css("z-index", 500)
                    }, r)
                },
                _closeClicked: function(e) {
                    var i, n, s, o;
                    return e.preventDefault(), i = t(e.currentTarget), n = this.collapsedMenu, this.main.removeClass("active"), this.closeButton.removeClass("btx-closed"), n.css("z-index", 110), s = i.closest(".btx-navbar"), o = s.data("fixed") ? 500 : this.options.delay, setTimeout(function() {
                        return t("body").hasClass("btx-unscrollable") && (n.hasClass("btx-collapsed-menu--full") || t("body").removeClass("btx-unscrollable")), s.removeClass("btx-no-transform")
                    }, o)
                }
            }), t.widget.bridge("btxSearch", t.bateaux.search)
        }).call(e, i(1))
    },
    528: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.setSize", {
                options: {
                    type: "full",
                    item: "",
                    addLineHeight: !0,
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    frameWidth: 0,
                    mobileNavbarHeight: 60,
                    tabletScreen: 960,
                    mobileScreen: 768,
                    screenPercent: 1,
                    fluid: !0
                },
                _create: function() {
                    var e;
                    return this.options.item.length ? this.item = this.element.find(this.options.item) : this.item = this.element, e = t(".btx-header"), e.length ? (this.hasHeader = !0, this.isNavbarTransparent = e.data("transparent"), this.headerHeight = this.isNavbarTransparent ? 0 : e.data("height")) : (this.hasHeader = !1, this.headerHeight = 0), this._setFullHeight(), this._on(t(window), {
                        resize: t.proxy(this._setFullHeight)
                    })
                },
                _setFullHeight: function() {
                    var e, i, n, s, o;
                    if (e = this.options.frameWidth, this.windowWidth = t(window).width(), i = "header" === this.options.type ? "" + (t(window).height() * this.options.screenPercent - this._calculateHeaderHeight() - 2 * e) : "" + (t(window).height() * this.options.screenPercent - 2 * e), s = i + "px", o = i + "px", this.options.fluid || this.options.isMobileOrTablet ? (this.item.css({
                            height: "auto",
                            "line-height": "inherit"
                        }), n = this.item.outerHeight(), n > i ? (s = "auto", o = "inherit") : (s = i + "px", o = i + "px")) : this.windowWidth <= this.options.tabletScreen && (s = "auto", o = "inherit"), this.item.css("height", s), this.options.addLineHeight) return this.item.css("line-height", o)
                },
                _calculateHeaderHeight: function() {
                    var t, e;
                    return this.options.isResponsive && this.hasHeader ? (t = this.isNavbarTransparent ? 0 : this.options.mobileNavbarHeight, e = this.windowWidth > this.options.tabletScreen ? this.headerHeight : t) : e = this.headerHeight, e
                }
            }), t.widget.bridge("btxSetSize", t.bateaux.setSize)
        }).call(e, i(1))
    },
    529: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.shopDropdown", {
                _create: function() {
                    var e, i, n, s, o, a;
                    return i = this.element, i.prepend('<div class="btx-dropdown"></div>'), e = i.find(".btx-dropdown"), o = i.find("option[selected]"), s = i.find("option"), a = '<button class="btx-dropdown-display btx-p-text-color btx-p-bg-bg btx-p-border-border">\n  <span>' + o.text() + '</span>\n  <i class="fa fa-caret-down"></i>\n</button>', n = '<ul class="btx-dropdown-menu btx-p-bg-bg btx-p-border-border"></ul>', e.append(a + n), s.each(function() {
                        var e;
                        return e = t(this).val() === o.val() ? ' class="active"' : "", i.find(".btx-dropdown-menu").append("<li" + e + '><a class="btx-p-text-color" href="#" data-value="' + t(this).val() + '">' + t(this).text() + "</a></li>")
                    }), i.find(".btx-dropdown-menu").hide(), this._on(this.element, {
                        "click button": "_buttonClicked",
                        "click a": "_dropdownClicked"
                    })
                },
                _buttonClicked: function(t) {
                    return t.preventDefault(), this.element.find(".btx-dropdown-menu").toggle()
                },
                _dropdownClicked: function(e) {
                    var i, n, s, o;
                    if (e.preventDefault(), i = t(e.currentTarget), n = i.parent(), o = i.data("value"), !n.hasClass("active")) return n.addClass("active"), n.siblings().removeClass("active"), s = i.html(), this.element.find("button span").html(s), this.element.find(".btx-dropdown-menu").hide(), this.element.find("select").val(o), this.element.find("select").change()
                }
            }), t.widget.bridge("btxShopDropdown", t.bateaux.shopDropdown)
        }).call(e, i(1))
    },
    530: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.sideNavbar", {
                options: {
                    isHorizontalScroll: !1,
                    isVerticalScroll: !1,
                    controller: null,
                    defaultScheme: "light"
                },
                _create: function() {
                    var t;
                    if (t = this, this.element.btxCollapsedMenu(), this.element.find(".btx-menu").btxMenuMobile(), this.element.hasClass("btx-side-navbar--minimal") && !this.options.isHalfPageScroll) return this.element.btxDynamicMenuColor({
                        controller: t.options.controller,
                        isHorizontalScroll: t.options.isHorizontalScroll,
                        isVerticalScroll: t.options.isVerticalScroll,
                        defaultScheme: t.options.defaultScheme,
                        isSidenav: !0
                    })
                }
            }), t.widget.bridge("btxSideNavbar", t.bateaux.sideNavbar)
        }).call(e, i(1))
    },
    531: function(t, e, i) {
        (function(t) {
            "use strict";
            var e;
            e = i(493), t.widget("bateaux.skill", {
                options: {
                    axis: "horizontal",
                    size: 110,
                    color: "#363636",
                    title: "",
                    percent: 80,
                    trackColor: "#f2f2f2",
                    thickness: 4
                },
                _create: function() {
                    var i, n, s;
                    return s = this.element.attr("class").match(/btx-skill--(\S+)/), this.style = s ? s[1] : "bar", i = this.element.find(".btx-skill-item"), this.length = i.length, n = this.options, i.each(function(i) {
                        return function(s, o) {
                            var a, r, l, d;
                            return o = t(o), a = o.data(), r = {}, r.axis = a.axis || n.axis, r.size = a.size || n.size, r.color = a.color || n.color, r.percent = a.percent || n.percent, r.baseColor = a.base || n.trackColor, r.thickness = a.thickness || n.thickness, "circle" === i.style && i._circle(o, r), d = i, l = new e.Scene({
                                triggerElement: o[0],
                                triggerHook: "onEnter",
                                offset: 30
                            }), o.is(":visible") ? (l.addTo(d.options.controller), o.hasClass("updated") ? void 0 : l.on("enter", function() {
                                return d._updateSkill(o, r, s, l)
                            })) : i.element.on("hiddenOpen.btx", function() {
                                return d._updateSkill(o, r, s, l), d.element.off("hiddenOpen.btx")
                            })
                        }
                    }(this))
                },
                _circle: function(t, e) {
                    return t.find(".easyPieChart").easyPieChart({
                        size: e.size,
                        barColor: e.color,
                        scaleColor: !1,
                        lineCap: "square",
                        lineWidth: parseInt(e.thickness),
                        trackColor: e.baseColor
                    })
                },
                _updateSkill: function(t, e, i, n) {
                    var s;
                    if (s = this, t.addClass("updated"), "bar" === this.style ? "horizontal" === e.axis ? setTimeout(function() {
                            return t.find(".btx-skill-progress").css("width", e.percent + "%")
                        }, 100) : setTimeout(function() {
                            return t.find(".btx-skill-progress").css("height", 100 - e.percent + "%")
                        }, 100) : t.find(".easyPieChart").data("easyPieChart").update(e.percent), n.destroy(), i === this.length - 1) return this.element.off("hiddenOpen.btx")
                }
            }), t.widget.bridge("btxSkill", t.bateaux.skill)
        }).call(e, i(1))
    },
    532: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.slider", {
                options: {
                    isResponsive: !0,
                    isMobileOrTablet: !1,
                    backgrounType: "image",
                    frameWidth: 0
                },
                _create: function() {
                    var t, e, i, n;
                    return this.element.btxCarousel({
                        isResponsive: this.options.isResponsive,
                        sliderOptions: {
                            speed: 600,
                            cssEase: "ease-in"
                        }
                    }), t = this.element.attr("class").match(/btx-slider--(\S+)/), i = t ? t[1] : "default", "fit-height" === i && (n = this.element.attr("data-role") && this.element.data(!1) ? "header" : "full", this.element.btxSetSize({
                        type: n,
                        item: ".btx-slider-item",
                        addLineHeight: !1,
                        isResponsive: this.options.isResponsive,
                        isMobileOrTablet: this.options.isMobileOrTablet,
                        frameWidth: this.options.frameWidth
                    })), e = this, this.element.on("afterChange", function(t, i, n) {
                        return e._setScheme(n)
                    })
                },
                _setScheme: function(t) {
                    var e, i;
                    return i = this.element.find(".slick-slide[data-slick-index='" + t + "']").attr("class").match(/btx-slider-(\S+)-scheme/), i ? (e = i[1], this.element.removeClass("btx-slider-light-scheme btx-slider-dark-scheme").addClass("btx-slider-" + e + "-scheme")) : this.element.removeClass("btx-slider-light-scheme btx-slider-dark-scheme")
                }
            }), t.widget.bridge("btxSlider", t.bateaux.slider)
        }).call(e, i(1))
    },
    533: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.tab", {
                options: {
                    isMobileOrTablet: !1
                },
                _create: function() {
                    var e;
                    if (e = this.element.find(".btx-tab-content:not(.active)"), e.css("max-height", "0"), setTimeout(function() {
                            return e.css("max-height", "").hide()
                        }, 500), this._on(this.element, {
                            "click .btx-tab-nav li": t.proxy(this._tabClicked, this)
                        }), this.options.isMobileOrTablet) return this.element.removeClass("btx-tab--right btx-tab--left btx-tab--top").addClass("btx-tab--top")
                },
                _tabClicked: function(e) {
                    var i, n, s, o, a;
                    if (e.preventDefault(), o = this.element, s = t(e.currentTarget), i = s.children("a").attr("href"), n = o.find(".btx-tab-content[data-name=" + i + "]"), a = o.find(".btx-tab-content.active"), !n.hasClass("active")) return a.removeClass("active").hide(), n.addClass("active").show(), n.find(".btx-item").trigger("hiddenOpen.btx"), s.addClass("active"), s.siblings().removeClass("active")
                }
            }), t.widget.bridge("btxTab", t.bateaux.tab)
        }).call(e, i(1))
    },
    534: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.testimonial", {
                options: {
                    isResponsive: !0
                },
                _create: function() {
                    if (this.element.hasClass("btx-testimonial--carousel")) return this._initializeCarousel()
                },
                _initializeCarousel: function() {
                    return this.element.btxCarousel({
                        isResponsive: this.options.isResponsive
                    })
                }
            }), t.widget.bridge("btxTestimonial", t.bateaux.testimonial)
        }).call(e, i(1))
    },
    535: function(t, e, i) {
        (function(t) {
            "use strict";
            t.widget("bateaux.video", {
                _create: function() {
                    var t, e, i;
                    if (t = this.element, i = this.element.find("video"), i.length && (e = this.element.closest(".btx-modal"), !e.length && t.data("autoplay"))) return i[0].play()
                }
            }), t.widget.bridge("btxVideo", t.bateaux.video)
        }).call(e, i(1))
    }
});